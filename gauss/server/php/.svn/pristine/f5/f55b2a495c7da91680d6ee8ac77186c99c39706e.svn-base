<?php

namespace App\Task\ExternalGame;
use Lib\Config;
use Lib\Task\Adapter;
use Lib\Task\Context;
use Lib\Task\IHandler;

class GameAmountTransfer implements IHandler
{
	public function onTask(Context $context, Config $config)
	{
		['data' => $data] = $context->getData();
		//设置了action Key为发送任务请求
		if (isset($data['action'])) {
			$taskAdapter = new Adapter($config->cache_daemon);
			$taskAdapter->plan('NotifySite',['path' => 'ExternalGame/GameAmountTransfer', 'data'=>["data"=>$data]]);
		} else {
			//回调通知

			//接收三方平台返回信息
			$client_id = isset($data['data']['client_id']) ? $data['data']['client_id'] : '';
			$websocketAdapter = new \Lib\Websocket\Adapter($config->cache_daemon);
			//校验是充值还是提现的key值
			$withdraw_key = isset($data['return_data']['withdraw_key']) ? $data['return_data']['withdraw_key'] : '';
			$interface_key = isset($data['data']['interface_key']) ? $data['data']['interface_key'] : '';
			$code = isset($data['return_data']['d']['code']) ? $data['return_data']['d']['code'] : '';
			//用来校验的订单号
			$order_id = isset($data['return_data']['order_id']) ? $data['return_data']['order_id'] : '';
			$order_id = substr($order_id,-19);
			$user_id = $data['return_data']['user_id'];
			$mysqlUser = $config->data_user;
			//获取用户数据
			$sql = "SELECT user_key,account_name,deal_key,layer_id FROM user_info_intact WHERE user_id='$user_id'";
			foreach ($mysqlUser->query($sql) as $v) {
				$user_key = $v['user_key'];
				$account_name = $v['account_name'];
				$deal_key = $v['deal_key'];
				$layer_id = $v['layer_id'];
			}
			//获取关联库
			$deal_mysql = $config->__get("data_" . $deal_key);
			$time = time();
			if ($withdraw_key == '') {
				//充值
				//判断充值注单号是否存在
				$sql = "SELECT * FROM external_export_fungaming WHERE fg_bet_id ='$order_id' ";
				$fungaming = [];
				foreach ($deal_mysql->query($sql) as $v) {
					$fungaming = $v;
				}
				if (!$fungaming) {
					//插入转出注单sql
					$sql = "INSERT INTO external_export_launch SET
									user_id=:user_id,user_key=:user_key,account_name=:account_name,
									layer_id=:layer_id,external_type=:external_type,
									launch_money=:launch_money,launch_time=:launch_time";
					$param = [
						":user_id"=> $user_id,
						":user_key"=> $user_key,
						":account_name"=> !empty($account_name) ? $account_name : 1,
						":layer_id"=> $layer_id,
						":external_type" => $interface_key,
						":launch_money"=> $data['return_data']['money'],
						":launch_time"=> $time
					];
					$deal_mysql->execute($sql, $param);
					$get_export_serial_sql = "SELECT serial_last('external_export') as export_serial";
					foreach ($deal_mysql->query($get_export_serial_sql) as $v) {
						$export_serial = $v['export_serial'];
					}
					if ($code == 0) {
						//充值成功
						//插入转出成功记录sql
						$sqls = "INSERT INTO external_export_success SET export_serial='$export_serial',success_time='$time '";
						try{
							$deal_mysql->execute($sqls);
							//插入转出注单id sql
							$sqls = "INSERT INTO external_export_fungaming SET export_serial='$export_serial',fg_bet_id='$order_id' ";
							$deal_mysql->execute($sqls);
							$res = [
								'status' => 200,
								'msg' => '充值成功',
								'data' => [
									'export_money' => $data['return_data']['money'],
									'now_wallet_money' => $data['return_data']['d']['money']
								]
							];
							$websocketAdapter->send($client_id,'ExternalGame/GameAmountTransfer', $res);
							return;
						}catch (\PDOException $e){
							throw new \PDOException($e);
						}
					} else {
						//充值失败-添加失败记录
						$sqls = "INSERT INTO external_export_failure SET 
							export_serial=:export_serial,failure_deal_serial=:failure_deal_serial,success_time=:success_time";
						$params = [
							":export_serial"=> $export_serial,
							":failure_deal_serial"=> 1,
							":success_time"=> $time
						];
						try{
							$deal_mysql->execute($sqls, $params);
							//插入转出注单id sql
							$sqls = "INSERT INTO external_export_fungaming SET export_serial='$export_serial',fg_bet_id='$order_id' ";
							$deal_mysql->execute($sqls);
							$res = [
								'status' => $code,
								'msg' => '充值失败'
							];
						}catch (\PDOException $e){
							throw new \PDOException($e);
						}
					}
				} else {
					$res = [
						'status' => 200,
						'msg' => '已充值',
						'data' => [
							'export_money' => $data['return_data']['money'],
							'now_wallet_money' => $data['return_data']['d']['money']
						]
					];
				}
			} else {
				//提现
				$external_type = $interface_key;
				if ($external_type == 'my') {
					$external_type = $withdraw_key;
				}
				//插入转入注单sql
				$sql = "INSERT INTO external_import_launch SET
									user_id=:user_id,user_key=:user_key,account_name=:account_name,
									layer_id=:layer_id,external_type=:external_type,
									launch_money=:launch_money,launch_time=:launch_time";
				$param = [
					":user_id"=> $user_id,
					":user_key"=> $user_key,
					":account_name"=> !empty($account_name) ? $account_name : 1,
					":layer_id"=> $layer_id,
					":external_type" => $external_type,
					":launch_money"=> $data['return_data']['money'],
					":launch_time"=> $time
				];
				try{
					$deal_mysql->execute($sql, $param);
					$get_import_serial_sql = "SELECT serial_last('external_import') as import_serial";
					foreach ($deal_mysql->query($get_import_serial_sql) as $v) {
						$import_serial = $v['import_serial'];
					}
				}catch (\PDOException $e){
					throw new \PDOException($e);
				}
				if ($code == 0) {
					//提现成功
					switch ($interface_key) {
						case 'my':
							//提现到我的钱包成功-添加成功记录
							$sqls = "INSERT INTO external_import_success SET 
							import_serial=:import_serial,success_deal_serial=:success_deal_serial,success_time=:success_time";
							$params = [
								":import_serial"=> $import_serial,
								":success_deal_serial"=> 1,
								":success_time"=> $time
							];
							try{
								$deal_mysql->execute($sqls,$params);
								$res = [
									'status' => 200,
									'msg' => '提现成功',
									'data' => [
										'import_money' => $data['return_data']['money'],
										'now_wallet_money' => $data['return_data']['d']['money']
									]
								];
							}catch (\PDOException $e){
								throw new \PDOException($e);
							}
							break;
						case 'ky':

							break;
						case 'ag':

							break;
						case 'lb':

							break;
						default:

							break;
					}
				} else {
					//提现失败-添加失败记录
					$sqls = "INSERT INTO external_import_failure SET 
							import_serial =:import_serial,failure_time=:failure_time";
					$params = [
						":import_serial "=> $import_serial,
						":failure_time"=> $time
					];
					try{
						$deal_mysql->execute($sqls, $params);
						$res = [
							'status' => $code,
							'msg' => '提现失败'
						];
					}catch (\PDOException $e){
						throw new \PDOException($e);
					}
				}
			}
			//推送客户端
			$websocketAdapter->send($client_id,'ExternalGame/GameAmountTransfer', $res);
		}
	}
}