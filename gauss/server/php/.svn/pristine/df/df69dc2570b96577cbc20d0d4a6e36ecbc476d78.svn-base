<?php
/**
 * Created by PhpStorm.
 * User: nathan
 * Date: 19-2-13
 * Time: 下午5:24
 */

namespace Site\Websocket\Member\Analyze;
use Lib\Websocket\Context;
use Lib\Config;
use Site\Websocket\CheckLogin;

/*
 * 下注分析 Site/Websocket/Member/Analyze/BetAnalysis
 */
class BetAnalysis extends CheckLogin
{
    public function onReceiveLogined(Context $context, Config $config)
    {
        //检查权限
        $auth = json_decode($context->getInfo('StaffAuth'));
        if (!in_array("user_analysis", $auth)) {
            $context->reply(["status" => 202, "msg" => "你还没有操作权限"]);
            return;
        }
        //代理层级列表
        $agentMysql = $config->data_staff;
        $userMysql = $config->data_user;
        $StaffGrade = $context->getInfo("StaffGrade");
        $staffId = $context->getInfo('StaffId');
        $MasterId = $context->getInfo("MasterId");
        $params = $context->getData();
        //子账号的权限信息  //会员层级列表
        $layer_list = $this->LayerManage($context,$config);
        $user_key = isset($params['user_key']) ? $params['user_key'] : '';
        $layer_id = isset($params['layer_id']) ? $params['layer_id'] : '';
        $broker_1_key = isset($params['broker_1_key']) ? $params['broker_1_key'] : '';
        $broker_2_key = isset($params['broker_2_key']) ? $params['broker_2_key'] : '';
        $broker_3_key = isset($params['broker_3_key']) ? $params['broker_3_key'] : '';

        if ($MasterId != 0) {
            $staffId =$MasterId;
        }
        if ($user_key) {
            $user_key = " AND user_key = '$user_key' ";
        }
        if ($layer_id) {
            $layer_id = " AND layer_id = '$layer_id' ";
        }
        if ($broker_1_key) {
            $broker_1_key = " AND broker_1_key = '$broker_1_key' ";
        }
        if ($broker_2_key) {
            $broker_2_key = " AND broker_2_key = '$broker_2_key' ";
        }
        if ($broker_3_key) {
            $broker_3_key = " AND broker_3_key = '$broker_3_key' ";
        }

        //求账号下及会员
        
        switch ($StaffGrade)
        {
            case 0:
                if(!empty($MasterId)){
                    $accout_sql = "select group_concat(layer_id) as layer_list from staff_layer where staff_id=:staff_id";
                    $layer_lists = 0;

                    foreach ($agentMysql->query($accout_sql,[":staff_id"=>$context->getInfo('StaffId')]) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }else{
                    $accout_sql = "select group_concat(layer_id) as layer_list from layer_info";
                    foreach ($userMysql->query($accout_sql) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }
                $sql = "SELECT group_concat(agent_id) as agent_list FROM staff_struct_agent";
                foreach($agentMysql->query($sql) as $row ) {
                    $agent_list = $row['agent_list'];
                }
                break;
            case 1:
                if(!empty($MasterId)){
                    $accout_sql = "select group_concat(layer_id) as layer_list from staff_layer where staff_id=:staff_id";
                    $layer_lists = 0;

                    foreach ($agentMysql->query($accout_sql,[":staff_id"=>$context->getInfo('StaffId')]) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }else{
                    $accout_sql = "select group_concat(layer_id) as layer_list from layer_info";
                    foreach ($userMysql->query($accout_sql) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }
                $sql = "SELECT group_concat(agent_id) as agent_list FROM staff_struct_agent WHERE major_id='$staffId'";
                foreach($agentMysql->query($sql) as $row ) {
                    $agent_list = $row['agent_list'];
                }
                break;
            case 2:
                if(!empty($MasterId)){
                    $accout_sql = "select group_concat(layer_id) as layer_list from staff_layer where staff_id=:staff_id";
                    $layer_lists = 0;

                    foreach ($agentMysql->query($accout_sql,[":staff_id"=>$context->getInfo('StaffId')]) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }else{
                    $accout_sql = "select group_concat(layer_id) as layer_list from layer_info";
                    foreach ($userMysql->query($accout_sql) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }
                $sql = "SELECT group_concat(agent_id) as agent_list FROM staff_struct_agent WHERE minor_id='$staffId'";
                foreach($agentMysql->query($sql) as $row ) {
                    $layer_lists = $row['agent_list'];
                }
                break;
            case 3:
                if(!empty($MasterId)){
                    $accout_sql = "select group_concat(layer_id) as layer_list from staff_layer where staff_id=:staff_id";
                    $layer_lists = 0;

                    foreach ($agentMysql->query($accout_sql,[":staff_id"=>$context->getInfo('StaffId')]) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }else{
                    $accout_sql = "select group_concat(layer_id) as layer_list from layer_info";
                    foreach ($userMysql->query($accout_sql) as $row){
                        $layer_lists = $row["layer_list"];
                    }
                }
                $agent_list = $staffId;
                break;
        }

        //根据总代理id查询下属的所有账号id以及所属的数据库

        $sql = "SELECT group_concat(user_id) as user_list FROM user_info_intact WHERE agent_id in ($agent_list) and layer_id in ($layer_lists)";
        foreach ($userMysql->query($sql) as $item) {
            $user_list = $item['user_list'];
        }
        if(empty($user_list)){
            $ids = 0;
        } else{
            $ids = $user_list;
        }
       

        $sql = "select user_key,broker_1_key,broker_2_key,broker_3_key,sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(wager_amount) as wager_amount,sum(bonus_amount) as bonus_amount from daily_user where user_id in ($ids) ". $user_key . $layer_id . $broker_1_key . $broker_2_key . $broker_3_key  . "group by user_key,broker_1_key,broker_2_key,broker_3_key";

        
        $mysqlReport = $config->data_report;
        $data = [];
        try{
            foreach ($mysqlReport->query($sql) as $row) {
                $row['winningRate'] = $row['bonus_amount'] / $row['bet_amount'];
                $row['res'] = $row['bonus_amount'] - $row['bet_amount'];
                $data[] = $row;
            }
            $total = count($data);
            $context->reply(['status' => 200,'msg' => '成功','total' => $total,'data' => $data,'layer_list' => $layer_list]);
        } catch (\PDOException $e) {
            $context->reply(["status"=>400,"msg"=>"获取列表失败"]);
            throw new \PDOException($e);
        }

    }
}