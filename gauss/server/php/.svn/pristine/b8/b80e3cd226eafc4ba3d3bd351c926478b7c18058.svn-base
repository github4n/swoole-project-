<?php

/**
 * Created by PhpStorm.
 * User: blake
 * Date: 19-1-3
 * Time: 上午9:14
 */

namespace Site\Websocket\Rebate\RebateCount;

use Site\Websocket\CheckLogin;
use Lib\Websocket\Context;
use Lib\Config;

class RebateCount extends CheckLogin {

    /**
     * 返水查询
     * @param Context $context
     * @param Config $config
     * is_deliver 是否派发
     * deliver_time 派发时间
     * layer_id   用户层级筛选
     * Rebate/RebateCount/RebateCount {"layer_id":"1","is_deliver":"0","deliver_time_start":"2018-02-25 17:18:47","deliver_time_end":"2019-02-25 17:18:47"}
     */
    public function onReceiveLogined(Context $context, Config $config) {
        $auth = json_decode($context->getInfo('StaffAuth'));
        if (!in_array("subsidy_report", $auth)) {
            $context->reply(["status" => 202, "msg" => "你还没有操作权限"]);
            return;
        }
        $data = $context->getData();
        $mysql_report = $config->data_report;
        $mysql_public = $config->data_public;
        $cache = $config->cache_site;
        $layer_list = json_decode($cache->hget("LayerList", "allLayer"));

        $staffId = $context->getInfo('StaffId');
        $StaffGrade = $context->getInfo("StaffGrade");
        $masterId = $context->getInfo('MasterId');
        $master_id = $masterId == 0 ? $staffId : $masterId;
        $interface_key_data = [];
        if ($StaffGrade == 0) {
//            $rebate_sql = "select *  from  daily_layer_subsidy where 1=1 ";
//            if (!empty($data["deliver_time_start"]) && empty($data["deliver_time_end"])) {
//                if (date('Y-m-d H:i:s', strtotime($data["deliver_time_start"])) != $data["deliver_time_start"]) {
//                    $context->reply(["status" => 202, "msg" => "初始时间类型错误"]);
//                    return;
//                }
//                $start = strtotime($data["deliver_time_start"]);
//                $rebate_sql .= "AND deliver_finish_time  > '$start'  ";
//            }
//            if (!empty($data["deliver_time_end"]) && empty($data["deliver_time_start"])) {
//                if (date('Y-m-d H:i:s', strtotime($data["deliver_time_end"])) != $data["deliver_time_end"]) {
//                    $context->reply(["status" => 203, "msg" => "结束时间类型错误"]);
//                    return;
//                }
//                $end = strtotime($data["deliver_time_end"]);
//                $rebate_sql .= "AND deliver_finish_time  < '$end'  ";
//            }
//            if (!empty($data["deliver_time_end"]) && !empty($data["deliver_time_start"])) {
//                if (date('Y-m-d H:i:s', strtotime($data["deliver_time_end"])) != $data["deliver_time_end"]) {
//                    $context->reply(["status" => 203, "msg" => "结束时间类型错误"]);
//                    return;
//                }
//                if (date('Y-m-d H:i:s', strtotime($data["deliver_time_start"])) != $data["deliver_time_start"]) {
//                    $context->reply(["status" => 202, "msg" => "初始时间类型错误"]);
//                    return;
//                }
//                if (strtotime($data["deliver_time_start"]) > strtotime($data["deliver_time_end"])) {
//                    $context->reply(["status" => 204, "msg" => "初始时间不可大于结束时间"]);
//                    return;
//                }
//                $start = strtotime($data["deliver_time_start"]);
//                $end = strtotime($data["deliver_time_end"]);
//                $rebate_sql .= "AND deliver_finish_time between '$start' and '$end'  ";
//            }
//
//            if (!empty($data["is_deliver"]) && $data["is_deliver"] != 0) {
//                $rebate_sql .= " AND deliver_finish_time != ''";
//            } elseif (!empty($data["is_deliver"]) && $data["is_deliver"] == '0' && empty($data["deliver_time"])) {
//                $rebate_sql .= " AND deliver_finish_time = ''";
//            }
//
//            if (!empty($data["layer_id"])) {
//                $layer_id = $data["layer_id"];
//                $rebate_sql .= " AND layer_id = '$layer_id' ";
//            }
//            $rebate_sql .= " ORDER BY daily,layer_id asc  ";            
//            $finale_data = iterator_to_array($mysql_report->query($rebate_sql));
            $finale_data = [];
            $twoTranslation = [
                'daily' => 20190102,
                'layer_id' => 1,
                'layer_name' => '新会员',
                'bet_all' => 5000,
                'subsidy_all' => 300,
                'bet_lottery' => 5000,
                'subsidy_lottery' => 300,
                'bet_fg' => 0,
                'subsidy_fg' => 0,
                'bet_ky' => 0,
                'subsidy_ky' => 0,
                'bet_lb' => 0,
                'subsidy_lb' => 0,
                'bet_ag' => 0,
                'subsidy_ag' => 0,
                'auto_deliver' => 1,
                'deliver_staff_id' => 0,
                'deliver_staff_name' => 0,
                'deliver_launch_time' => 0,
                'deliver_finish_time' => 0,
            ];
            $finale_data[] = $twoTranslation;
        } else {

            switch ($StaffGrade) {
                case 1:
                    $staff_grade = " and major_id ='$master_id'  ";
                    break;
                case 2:
                    $staff_grade = " and minor_id ='$master_id'  ";
                    break;
                case 3:
                    $staff_grade = " and agent_id ='$master_id'  ";
                    break;
            }

            //该接口对应的是用户层级，只能从daily_layer_subsidy里面取自动发放以及派发时间数据,非站长层级处理起来会很耗内存，但未想到更好的办法
            $subsidy_game_sql = "select layer_name,category_key,game_key,daily,layer_id,sum(bet_amount) as bet_amount ,sum(subsidy) as subsidy from daily_user_game_subsidy  where 1=1  " . $staff_grade;
            if (!empty($data["layer_id"])) {
                $layer_id = $data["layer_id"];
                $subsidy_game_sql .= " AND layer_id = '$layer_id' ";
            }
            $subsidy_game_sql .= " group by daily,layer_id,layer_name,category_key,game_key ORDER BY daily,layer_id asc";
            $subsidy_game_data = iterator_to_array($mysql_report->query($subsidy_game_sql));
            $external_model_sql = "select interface_key,game_key,game_name from external_game";
            foreach ($mysql_public->query($external_model_sql) as $value) {
                $interface_key_data += [$value['game_key'] => $value['interface_key']];
            }
            $lottery_model_sql = "select game_key from lottery_game";
            foreach ($mysql_public->query($lottery_model_sql) as $value) {
                $interface_key_data += [$value['game_key'] => 'lottery'];
            }

            $finale_data = [];
            $twoTranslation = [];
            $threeTranslation = [];
            $fourTranslation = [];
            $is_deliver = '';
            $deliver_time_start = '';
            $deliver_time_end = '';
            if (!empty($subsidy_game_data)) {
                foreach ($subsidy_game_data as $value) {
                    $time_start = "true";
                    $time_end = "true";
                    $diver_judge_no = "true";
                    $diver_judge_yes = "true";
                    $fourTranslation = end($finale_data);
                    $threeTranslation = $fourTranslation;
                    if (isset($data["is_deliver"]) && $data["is_deliver"] != 1) {
                        $is_deliver = 0;
                    }
                    if (!empty($data["is_deliver"]) && $data["is_deliver"] == 1) {
                        $is_deliver = 1;
                    }
                    if (!empty($data["deliver_time_start"]) && empty($data["deliver_time_end"])) {
                        if (date('Y-m-d H:i:s', strtotime($data["deliver_time_start"])) != $data["deliver_time_start"]) {
                            $context->reply(["status" => 202, "msg" => "初始时间类型错误"]);
                            return;
                        }
                        $deliver_time_start = strtotime($data["deliver_time_start"]);
                    }
                    if (!empty($data["deliver_time_end"]) && empty($data["deliver_time_start"])) {
                        if (date('Y-m-d H:i:s', strtotime($data["deliver_time_end"])) != $data["deliver_time_end"]) {
                            $context->reply(["status" => 203, "msg" => "结束时间类型错误"]);
                            return;
                        }
                        $deliver_time_end = strtotime($data["deliver_time_end"]);
                    }
                    if (!empty($data["deliver_time_end"]) && !empty($data["deliver_time_start"])) {
                        if (date('Y-m-d H:i:s', strtotime($data["deliver_time_end"])) != $data["deliver_time_end"]) {
                            $context->reply(["status" => 203, "msg" => "结束时间类型错误"]);
                            return;
                        }
                        if (date('Y-m-d H:i:s', strtotime($data["deliver_time_start"])) != $data["deliver_time_start"]) {
                            $context->reply(["status" => 202, "msg" => "初始时间类型错误"]);
                            return;
                        }
                        if (strtotime($data["deliver_time_start"]) > strtotime($data["deliver_time_end"])) {
                            $context->reply(["status" => 204, "msg" => "初始时间不可大于结束时间"]);
                            return;
                        }
                        $deliver_time_start = strtotime($data["deliver_time_start"]);
                        $deliver_time_end = strtotime($data["deliver_time_end"]);
                    }
                    
                    if (!$threeTranslation || $threeTranslation['daily'] != $value['daily'] || $threeTranslation['layer_id'] != $value['layer_id']) {
                        $twoTranslation = [
                            'daily' => $value['daily'],
                            'layer_id' => $value['layer_id'],
                            'layer_name' => $value['layer_name'],
                            'bet_all' => $value['bet_amount'],
                            'subsidy_all' => $value['subsidy'],
                            'bet_lottery' => 0,
                            'subsidy_lottery' => 0,
                            'bet_fg' => 0,
                            'subsidy_fg' => 0,
                            'bet_ky' => 0,
                            'subsidy_ky' => 0,
                            'bet_lb' => 0,
                            'subsidy_lb' => 0,
                            'bet_ag' => 0,
                            'subsidy_ag' => 0,
                            'auto_deliver' => 0,
                            'deliver_staff_id' => 0,
                            'deliver_staff_name' => 0,
                            'deliver_launch_time' => 0,
                            'deliver_finish_time' => 0,
                        ];
                        $interface_translation = $interface_key_data[$value['game_key']];

                        switch ($interface_translation) {
                            case 'fg':
                                $twoTranslation['bet_fg'] += $value['bet_amount'];
                                $twoTranslation['subsidy_fg'] += $value['subsidy'];
                                break;
                            case 'ky':
                                $twoTranslation['bet_ky'] += $value['bet_amount'];
                                $twoTranslation['subsidy_ky'] += $value['subsidy'];
                                break;
                            case 'lb':
                                $twoTranslation['bet_lb'] += $value['bet_amount'];
                                $twoTranslation['subsidy_lb'] += $value['subsidy'];
                                break;
                            case 'ag':
                                $twoTranslation['bet_ag'] += $value['bet_amount'];
                                $twoTranslation['subsidy_ag'] += $value['subsidy'];
                                break;
                            case 'lottery':
                                $twoTranslation['bet_lottery'] += $value['bet_amount'];
                                $twoTranslation['subsidy_lottery'] += $value['subsidy'];
                                break;
                        }

                        $daily = $value['daily'];
                        $layer = $value['layer_id'];
                        $is_diver_sql = "select auto_deliver,deliver_staff_id,deliver_staff_name,deliver_launch_time,deliver_finish_time from daily_layer_subsidy where daily='$daily' and  layer_id='$layer'       ";
                        $dive_data = iterator_to_array($mysql_report->query($is_diver_sql));
                        if ($dive_data[0] != null) {
                            $twoTranslation['auto_deliver'] = $dive_data[0]['auto_deliver'];
                            //$twoTranslation['deliver_staff_id'] = $dive_data[0]['deliver_staff_id'];
                            //$twoTranslation['deliver_staff_name'] = $dive_data[0]['deliver_staff_name'];
                            $twoTranslation['deliver_launch_time'] = $dive_data[0]['deliver_launch_time'];
                            $twoTranslation['deliver_finish_time'] = $dive_data[0]['deliver_finish_time'];
                        }

                        if ($deliver_time_start != '') {
                            if ($twoTranslation['deliver_finish_time'] < $deliver_time_start) {
                                $time_start = "false";
                            }
                        }
                        if ($deliver_time_end != '') {
                            if ($twoTranslation['deliver_finish_time'] > $deliver_time_end) {
                                $time_end = "false";
                            }
                        }

                        if ($deliver_time_end == '' && $deliver_time_start == '') {
                            if ($is_deliver == 0 && is_numeric($is_deliver) && $twoTranslation['deliver_finish_time'] != 0) {
                                $diver_judge_no = "false";
                            }
                        }
                        if ($is_deliver != '' && $is_deliver == 1 && $twoTranslation['deliver_finish_time'] == 0) {
                            $diver_judge_yes = "false";
                        }
                        
                        
                       
                        if ($diver_judge_yes == 'true' && $diver_judge_no == 'true' && $time_end == 'true' && $time_start == 'true') {
                            array_push($finale_data, $twoTranslation);
                        }
                    } else {
                        $interface_translation = $interface_key_data[$value['game_key']];
                        switch ($interface_translation) {
                            case 'fg':
                                $twoTranslation['bet_fg'] += $value['bet_amount'];
                                $twoTranslation['subsidy_fg'] += $value['subsidy'];
                                break;
                            case 'ky':
                                $twoTranslation['bet_ky'] += $value['bet_amount'];
                                $twoTranslation['subsidy_ky'] += $value['subsidy'];
                                break;
                            case 'lb':
                                $twoTranslation['bet_lb'] += $value['bet_amount'];
                                $twoTranslation['subsidy_lb'] += $value['subsidy'];
                                break;
                            case 'ag':
                                $twoTranslation['bet_ag'] += $value['bet_amount'];
                                $twoTranslation['subsidy_ag'] += $value['subsidy'];
                                break;
                            case 'lottery':
                                $twoTranslation['bet_lottery'] += $value['bet_amount'];
                                $twoTranslation['subsidy_lottery'] += $value['subsidy'];
                                break;
                        }
                    }
                    if ($threeTranslation && $threeTranslation['daily'] == $value['daily'] && $threeTranslation['layer_id'] == $value['layer_id']) {
                        array_pop($finale_data);
                        array_push($finale_data, $threeTranslation);
                    }
                }
            }
        }
        $context->reply(['status' => 200, 'layer_list' => $layer_list, 'list' => $finale_data]);
        return;
    }

}
