<?php
/**
 * Created by PhpStorm.
 * User: nathan
 * Date: 19-1-2
 * Time: 下午5:13
 */

namespace Site\Task\Report;
use Lib\Config;
use Lib\Task\Context;
use Lib\Task\IHandler;

class UserLottery implements IHandler
{
    public function onTask(Context $context, Config $config)
    {
        // TODO: Implement onTask() method.

        ['time' => $time] = $context->getData();
        $daily = intval(date('Ymd', $time));
        $start_time = strtotime($daily.' 00:00:00');
        $end_time = strtotime($daily.' 23:59:59');

        $adapter = $context->getAdapter();
        $mysqlReport = $config->data_report;

        //检测数据是否锁定
        $dailyInfo = [];
        $sql = "select daily from daily_status where daily=:daily and frozen=1";
        foreach ($mysqlReport->query($sql,[":daily"=>$daily]) as $row){
            $dailyInfo = $row;
        }
        if(!empty($dailyInfo)){
            $adapter->plan('Report/UserLottery', ['time' => $time + 86400], time() + 600, 9);
            return;
        }
        
        $data = array();
        foreach ($config->deal_list as $deal) {
            $mysql = $config->__get('data_' . $deal);
            $sql = "select game_key,user_id,count(bet_serial) as bet_count,sum(bet_launch) as bet_amount,count(bet >0 or null) as wager_count,sum(bet) as wager_amount,count(bonus > 0 or null) as bonus_count,sum(bonus) as bonus_amount,count(rebate > 0 or null) as rebate_count,sum(rebate) as rebate_amount,sum(revert) as revert_amount from bet_unit_intact where settle_time between '$start_time' and '$end_time' group by user_id,game_key";
            foreach ($mysql->query($sql) as $row) {
                //截取game_key查询彩票相关信息
                $game_key = $row['game_key'];
                $lotteryMysql = $config->data_public;
                $lotterySql = "select model_name,model_key,game_key,game_name from lottery_game_intact where game_key = '$game_key'";
                $lotteryInfo = [];
                foreach ($lotteryMysql->query($lotterySql) as $v) {
                    $lotteryInfo = $v;
                }

                //根据user_id查询体系相关信息
                $user_id = $row['user_id'];
                $userInfoSql = "select user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,broker_1_id,broker_1_key,broker_1_name,broker_2_id,broker_2_key,broker_2_name,broker_3_id,broker_3_key,broker_3_name from user_cumulate where user_id = '$user_id'";
                $userInfo = [];
                foreach ($mysqlReport->query($userInfoSql) as $info) {
                    $userInfo = $info;
                }

                $subsidy_sql = "select sum(subsidy) as subsidy from daily_user_game_subsidy where daily = '$daily' and game_key='$game_key' and user_id = '$user_id'";
                $subsidy = 0;
                foreach ($mysqlReport->query($subsidy_sql) as $val) {
                    $subsidy = !empty($val['subsidy']) ? $val['subsidy'] : 0;
                }

                //计算损益规则,返奖+反水+返点+退款-有效投注
                $profitLoss = $row['bonus_amount'] + $row['rebate_amount'] + $row['revert_amount'] + $subsidy - $row['bet_amount'];
                if(!empty($userInfo)){
                    $tag = [
                        'daily'         => $daily,
                        'user_id'       => $user_id,
                        'user_key'      => $userInfo['user_key'],
                        'user_name'     => $userInfo['user_name'],
                        'layer_id'      => $userInfo['layer_id'],
                        'layer_name'    => $userInfo['layer_name'],
                        'major_id'      => $userInfo['major_id'],
                        'major_name'    => $userInfo['major_name'],
                        'minor_id'      => $userInfo['minor_id'],
                        'minor_name'    => $userInfo['minor_name'],
                        'agent_id'      => $userInfo['agent_id'],
                        'agent_name'    => $userInfo['agent_name'],
                        'broker_1_id'   => $userInfo['broker_1_id'],
                        'broker_1_key'  => $userInfo['broker_1_key'],
                        'broker_1_name' => $userInfo['broker_1_name'],
                        'broker_2_id'   => $userInfo['broker_2_id'],
                        'broker_2_key'  => $userInfo['broker_2_key'],
                        'broker_2_name' => $userInfo['broker_2_name'],
                        'broker_3_id'   => $userInfo['broker_3_id'],
                        'broker_3_key'  => $userInfo['broker_3_key'],
                        'broker_3_name' => $userInfo['broker_3_name'],
                        'model_key'     => $lotteryInfo['model_key'],
                        'model_name'    => $lotteryInfo['model_name'],
                        'game_key'      => $game_key,
                        'game_name'     => $lotteryInfo['game_name'],
                        'bet_count'     => $row['bet_count'],
                        'bet_amount'    => $row['bet_amount'],
                        'wager_count'   => $row['wager_count'],
                        'wager_amount'   => $row['wager_amount'],
                        'bonus_count'   => $row['bonus_count'],
                        'bonus_amount'  => $row['bonus_amount'],
                        'rebate_count'  => $row['rebate_count'],
                        'rebate_amount' => $row['rebate_amount'],
                        'subsidy_amount'=> $subsidy,
                        'profit_amount' => substr(sprintf("%.3f",$profitLoss),0,-1)
                    ];
                    $data[] = $tag;
                }

            }
        }

        $mysqlReport->daily_user_lottery->load($data, [], 'replace');



        //周报
        $weekly = intval(date("oW",$time));
        $first_day = intval(date('Ymd', strtotime("-1 week Monday", $time)));
        $last_day = intval(date('Ymd', strtotime("+0 week Sunday", $time)));
        $weekly_sql = "select user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,broker_1_id,broker_1_key,broker_1_name,broker_2_id,broker_2_key,broker_2_name,broker_3_id,broker_3_key,broker_3_name,model_key,model_name,game_key,game_name,sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(wager_count) as wager_count,sum(wager_amount) as wager_amount,sum(bonus_count) as bonus_count,sum(bonus_amount) as bonus_amount,sum(rebate_count) as rebate_count,sum(rebate_amount) as rebate_amount,sum(subsidy_amount) as subsidy_amount,sum(profit_amount) as profit_amount  from daily_user_lottery where daily between '$first_day' and '$last_day' group by user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,broker_1_id,broker_1_key, broker_2_id ,broker_2_key ,broker_3_id,broker_3_key,broker_1_name,broker_2_name,broker_3_name,model_key,model_name,game_key,game_name";
        $weekData = $mysqlReport->query($weekly_sql);
        if (!empty($weekData)) {
            $mysqlReport->weekly_user_lottery->import($weekData, [
                'weekly' => $weekly,
            ], 'replace');
        }

        //月报
        $monthly = intval(date("Ym",$time));
        $first_day = date('Ym01', $time);
        $last_day = date('Ymd', strtotime(date('Y-m-01',$time) . ' +1 month -1 day'));
        $monthly_sql = "select user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,broker_1_id,broker_1_key,broker_1_name,broker_2_id,broker_2_key,broker_2_name,broker_3_id,broker_3_key,broker_3_name,model_key,model_name,game_key,game_name,sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(wager_count) as wager_count,sum(wager_amount) as wager_amount,sum(bonus_count) as bonus_count,sum(bonus_amount) as bonus_amount,sum(rebate_count) as rebate_count,sum(rebate_amount) as rebate_amount,sum(subsidy_amount) as subsidy_amount,sum(profit_amount) as profit_amount  from daily_user_lottery where daily between '$first_day' and '$last_day' group by user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,broker_1_id,broker_1_key, broker_2_id ,broker_2_key ,broker_3_id,broker_3_key,broker_1_name,broker_2_name,broker_3_name,model_key,model_name,game_key,game_name";
        $monthData = $mysqlReport->query($monthly_sql);
        if (!empty($monthData)) {
            $mysqlReport->monthly_user_lottery->import($monthData, [
                'monthly' => $monthly,
            ], 'replace');
        }

        if (time() > $time + 86400) {
            $adapter->plan('Report/UserLottery', ['time' => $time + 86400], time(), 9);
        }
        if (time() < $time + 86400 + 3600) {
            $adapter->plan('Report/UserLottery', ['time' => $time], time() + 600, 9);
        }
    }
}