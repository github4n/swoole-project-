<?php
namespace Site\Task\Report;

use Lib\Config;
use Lib\Task\Context;
use Lib\Task\IHandler;

class StaffLottery implements IHandler
{
    public function onTask(Context $context, Config $config)
    {
        ['time' => $time] = $context->getData();
        $adapter = $context->getAdapter();
        $daily = intval(date('Ymd', $time));
        $mysqlReport = $config->data_report;
        $sql = "select major_id,major_name,minor_id,minor_name,agent_id,agent_name,model_key,model_name,game_key,game_name,".
            "sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(bet_count>0) as bet_user,sum(wager_count) as wager_count,sum(wager_amount > 0) as wager_user,sum(wager_amount) as wager_amount,sum(subsidy_amount>0) as subsidy_user,".
            "sum(bonus_count) as bonus_count,sum(bonus_amount) as bonus_amount,sum(bonus_amount !=0) as bonus_user,".
            "sum(rebate_count) as rebate_count,sum(rebate_amount) as rebate_amount,sum(subsidy_amount) as subsidy_amount,".
            "sum(bonus_amount !=0) as bonus_user,sum(rebate_amount !=0) as rebate_user,sum(profit_amount) as profit_amount from daily_user_lottery where daily='$daily' group by major_id,major_name,minor_id,minor_name,agent_id,agent_name,model_key,model_name,game_key,game_name";
        $generator = $mysqlReport->query($sql);
        $mysqlReport->daily_staff_lottery->import($generator, [
            'daily' => $daily,], 'replace');



        $weekly = intval(date("oW",$time));
        $first_day = intval(date('Ymd', strtotime("-1 week Monday", $time)));
        $last_day = intval(date('Ymd', strtotime("+0 week Sunday", $time)));
        $sql = "select major_id,major_name,minor_id,minor_name,agent_id,agent_name,model_key,model_name,game_key,game_name,".
            "sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(bet_count>0) as bet_user,sum(subsidy_amount>0) as subsidy_user,".
            "sum(bonus_count) as bonus_count,sum(wager_count) as wager_count,sum(wager_amount > 0) as wager_user,sum(wager_amount) as wager_amount,sum(bonus_amount) as bonus_amount,sum(bonus_amount !=0) as bonus_user,".
            "sum(rebate_count) as rebate_count,sum(rebate_amount) as rebate_amount,sum(subsidy_amount) as subsidy_amount,".
            "sum(bonus_amount !=0) as bonus_user,sum(rebate_amount !=0) as rebate_user,sum(profit_amount) as profit_amount ".
            "from daily_user_lottery where daily between '$first_day' and '$last_day' group by major_id,major_name,minor_id,".
            "minor_name,agent_id,agent_name,model_key,model_name,game_key,game_name";
        $generator = $mysqlReport->query($sql);
        $mysqlReport->weekly_staff_lottery->import($generator, [
            'weekly' => $weekly,], 'replace');

        $monthly = intval(date("Ym",$time));
        $first_day = date('Ym01', $time);
        $last_day = date('Ymd', strtotime(date('Y-m-01',$time) . ' +1 month -1 day'));
        $sql = "select major_id,major_name,minor_id,minor_name,agent_id,agent_name,model_key,model_name,game_key,game_name,".
            "sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(wager_count) as wager_count,sum(wager_amount > 0) as wager_user,sum(wager_amount) as wager_amount,sum(bet_count>0) as bet_user,sum(subsidy_amount>0) as subsidy_user,".
            "sum(bonus_count) as bonus_count,sum(bonus_amount) as bonus_amount,sum(bonus_amount !=0) as bonus_user,".
            "sum(rebate_count) as rebate_count,sum(rebate_amount) as rebate_amount,sum(subsidy_amount) as subsidy_amount,".
            "sum(bonus_amount !=0) as bonus_user,sum(rebate_amount !=0) as rebate_user,sum(profit_amount) as profit_amount ".
            "from daily_user_lottery where daily between '$first_day' and '$last_day' group by major_id,major_name,minor_id,".
            "minor_name,agent_id,agent_name,model_key,model_name,game_key,game_name";
        $generator = $mysqlReport->query($sql);
        $mysqlReport->monthly_staff_lottery->import($generator, [
            'monthly' => $monthly,], 'replace');

        $adapter->plan('NotifyPlat', ['path' => 'Analysis/Site', 'data' => ["time"=>$time]]);
        
        if (time() > $time + 86400) {
            $adapter->plan('Report/StaffLottery', ['time' => $time + 86400], time(), 9);
        }
        if (time() < $time + 86400 + 3600) {
            $adapter->plan('Report/StaffLottery', ['time' => $time], time() + 600, 9);
        }
    }
}
