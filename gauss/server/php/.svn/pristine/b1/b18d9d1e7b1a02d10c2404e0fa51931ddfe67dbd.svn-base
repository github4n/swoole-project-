<?php
namespace Site\Task\Report;

use Lib\Config;
use Lib\Task\Context;
use Lib\Task\IHandler;

class Staff implements IHandler
{
    public function onTask(Context $context, Config $config)
    {
        ['time' => $time] = $context->getData();
        $adapter = $context->getAdapter();
        $daily = intval(date('Ymd', $time));
        $mysqlReport = $config->data_report;

        //检测数据是否锁定
        $dailyInfo = [];
        $sql = "select daily from daily_status where daily=:daily and frozen=1";
        foreach ($mysqlReport->query($sql,[":daily"=>$daily]) as $row){
            $dailyInfo = $row;
        }
        if(!empty($dailyInfo)){
            $adapter->plan('Report/Staff', ['time' => $time + 86400], time() + 600, 9);
            return;
        }

        $allrow = [];

        $sql = "SELECT major_id,major_name,minor_id,minor_name,agent_id,agent_name,count(user_id) as user_all,".
            "count(is_first_deposit) as user_first_deposit,sum(is_first_deposit*deposit_amount) as amount_first_deposit,".
            "count(is_active) as user_active,sum(deposit_count) as deposit_count,sum(deposit_amount) as deposit_amount,".
            "sum(deposit_amount>0) as deposit_user,sum(deposit_bank_count) as deposit_bank_count,".
            "sum(deposit_bank_amount) as deposit_bank_amount,sum(deposit_weixin_count>0) as deposit_weixin_user,".
            "sum(deposit_weixin_count) as deposit_weixin_count,sum(deposit_weixin_amount) as deposit_weixin_amount,".
            "sum(deposit_alipay_count) as deposit_alipay_count,sum(deposit_alipay_amount) as deposit_alipay_amount,".
            "sum(deposit_alipay_count>0) as deposit_alipay_user,sum(bank_deposit_count>0) as bank_deposit_user,".
            "sum(bank_deposit_count) as bank_deposit_count,sum(bank_deposit_amount) as bank_deposit_amount,".
            "sum(staff_deposit_count) as staff_deposit_count,sum(staff_deposit_amount) as staff_deposit_amount,".
            "count(staff_deposit_count>0) as staff_deposit_user,sum(withdraw_count) as withdraw_count,".
            "sum(withdraw_amount) as withdraw_amount,sum(withdraw_count>0) as withdraw_user,".
            "sum(bet_count>0) as bet_user,sum(rebate_amount>0) as rebate_user,sum(bonus_amount>0) as bonus_user,".
            "sum(staff_withdraw_count>0) as staff_withdraw_user,sum(coupon_amount>0) as coupon_user,".
            "sum(staff_withdraw_count) as staff_withdraw_count,sum(staff_withdraw_amount) as staff_withdraw_amount,".
            "sum(coupon_amount) as coupon_amount,sum(bet_count) as bet_count,sum(bet_amount) as bet_amount,sum(wager_count) as wager_count,".
            "sum(wager_amount) as wager_amount,count(wager_amount >0 ) as wager_user,sum(bonus_count) as bonus_count,sum(bonus_amount) as bonus_amount,sum(rebate_count) as rebate_count,".
            "sum(rebate_amount) as rebate_amount,sum(subsidy_amount) as subsidy_amount,sum(profit_amount) as profit_amount,".
            "sum(is_today_register) as user_register,sum(deposit_bank_amount>0) as deposit_bank_user,".
            "sum(subsidy_amount>0) as subsidy_user ".
            "FROM daily_user WHERE daily=:daily group by major_id,major_name,minor_id,minor_name,agent_id,agent_name";
        //返佣总人数返佣金额                           
        $all_list = iterator_to_array($mysqlReport->query($sql,[":daily"=>$daily]));
        if(!empty($all_list)){
            foreach ($all_list as $key=>$val){
                $row = ["daily"=>$daily,"major_id"=>$val["major_id"],"major_name"=>$val["major_name"],
                    "minor_id"=>$val["minor_id"],"minor_name"=>$val["minor_name"],"agent_id"=>$val["agent_id"],
                    "agent_name"=>$val["agent_name"],"user_all"=>$val["user_all"],"user_active"=>$val["user_active"],
                    "user_first_deposit"=>$val["user_first_deposit"],"amount_first_deposit"=>$val["amount_first_deposit"],
                    "deposit_count"=>$val["deposit_count"],"deposit_user"=>$val["deposit_user"],
                    "deposit_amount"=>$val["deposit_amount"],"deposit_bank_count"=>$val["deposit_bank_count"],
                    "deposit_bank_user"=>$val["deposit_bank_user"],"deposit_bank_amount"=>$val["deposit_bank_amount"],
                    "deposit_weixin_count"=>$val["deposit_weixin_count"],"deposit_weixin_user"=>$val["deposit_weixin_user"],
                    "deposit_weixin_amount"=>$val["deposit_weixin_amount"],"withdraw_user"=>$val["withdraw_user"],
                    "deposit_alipay_count"=>$val["deposit_alipay_count"],"deposit_alipay_user"=>$val["deposit_alipay_user"],
                    "deposit_alipay_amount"=>$val["deposit_alipay_amount"],"bank_deposit_count"=>$val["bank_deposit_count"],
                    "bank_deposit_user"=>$val["bank_deposit_user"],"bank_deposit_amount"=>$val["bank_deposit_amount"],
                    "staff_deposit_count"=>$val["staff_deposit_count"],"staff_deposit_user"=>$val["staff_deposit_user"],
                    "staff_deposit_amount"=>$val["staff_deposit_amount"],"withdraw_count"=>$val["withdraw_count"],
                    "staff_withdraw_count"=>$val["staff_withdraw_count"],"staff_withdraw_user"=>$val["staff_withdraw_user"],
                    "staff_withdraw_amount"=>$val["staff_withdraw_amount"],"coupon_user"=>$val["coupon_user"],
                    "coupon_amount"=>$val["coupon_amount"],"bet_count"=>$val["bet_count"],"bet_user"=>$val["bet_user"],
                    "bet_amount"=>$val["bet_amount"],"wager_count"=>$val['wager_count'],"wager_user"=>$val['wager_user'],"wager_amount"=>$val['wager_amount'],"bonus_count"=>$val["bonus_count"],"bonus_user"=>$val["bonus_user"],
                    "bonus_amount"=>$val["bonus_amount"],"rebate_count"=>$val["rebate_count"],
                    "rebate_user"=>$val["rebate_user"],"rebate_amount"=>$val["rebate_amount"],
                    "subsidy_user"=>$val["subsidy_user"],"subsidy_amount"=>$val["subsidy_amount"],
                    "profit_amount"=>$val["profit_amount"],"user_register"=>$val["user_register"],
                    "withdraw_amount"=>$val['withdraw_amount']
                    ];
                //佣金
                $sql = "SELECT sum(brokerage) as brokerage_amount,count(brokerage>0) as brokerage_user ".
                    "FROM daily_user_brokerage WHERE agent_id=:agent_id AND daily=:daily";
                foreach ($mysqlReport->query($sql,[":agent_id"=>$val["agent_id"],":daily"=>$daily]) as $rows){
                    $row +=  ["brokerage_user"=>$rows["brokerage_user"],"brokerage_amount"=>!empty($rows["brokerage_amount"]) ? $rows["brokerage_amount"] :0];
                }
                $allrow[] = $row;
            }
        }

        $mysqlReport->daily_staff->load($allrow, [], 'replace');

        $weekly = intval(date("oW",$time));
        $first_day = intval(date('Ymd', strtotime("-1 week Monday", $time)));
        $last_day = intval(date('Ymd', strtotime("+0 week Sunday", $time)));
        $sql = "SELECT major_id,major_name,minor_id,minor_name,agent_id,agent_name,max(user_all) as user_all,".
            "sum(user_register) as user_register,sum(user_first_deposit) as user_first_deposit,".
            "sum(amount_first_deposit) as amount_first_deposit,sum(user_active) as user_active,".
            "sum(deposit_count) as deposit_count,sum(deposit_user) as deposit_user,sum(user_register) as user_register,".
            "sum(user_first_deposit) as user_first_deposit,sum(amount_first_deposit)as amount_first_deposit,".
            "sum(user_active) as user_active,sum(deposit_count) as deposit_count,sum(deposit_user) as deposit_user,".
            "sum(deposit_amount) as deposit_amount,sum(deposit_bank_count) as deposit_bank_count,".
            "sum(deposit_bank_user) as deposit_bank_user,sum(deposit_bank_amount) as deposit_bank_amount,".
            "sum(deposit_weixin_count) as deposit_weixin_count,sum(deposit_weixin_user) as deposit_weixin_user,".
            "sum(deposit_weixin_amount) as deposit_weixin_amount,sum(deposit_alipay_count) as deposit_alipay_count,".
            "sum(deposit_alipay_user) as deposit_alipay_user,sum(deposit_alipay_amount) as deposit_alipay_amount,".
            "sum(bank_deposit_count) as bank_deposit_count,sum(bank_deposit_user) as bank_deposit_user,".
            "sum(bank_deposit_amount) as bank_deposit_amount,sum(staff_deposit_count) as staff_deposit_count,".
            "sum(staff_deposit_user) as staff_deposit_user,sum(staff_deposit_amount) as staff_deposit_amount,".
            "sum(withdraw_count) as withdraw_count,sum(withdraw_user) as withdraw_user,sum(coupon_user) as coupon_user,".
            "sum(withdraw_amount) as withdraw_amount,sum(staff_withdraw_count) as staff_withdraw_count,".
            "sum(staff_withdraw_user) as staff_withdraw_user,sum(staff_withdraw_amount) as staff_withdraw_amount,".
            "sum(coupon_amount) as coupon_amount,sum(brokerage_user) as brokerage_user,sum(bet_count) as bet_count,sum(wager_count) as wager_count,".
            "sum(wager_amount) as wager_amount,sum(wager_user) as wager_user,sum(brokerage_amount) as brokerage_amount,sum(bet_user) as bet_user,sum(bet_amount) as bet_amount,".
            "sum(bonus_count) as bonus_count,sum(bonus_user) as bonus_user,sum(bonus_amount) as bonus_amount,".
            "sum(rebate_count) as rebate_count,sum(rebate_user) as rebate_user,sum(rebate_amount) as rebate_amount,".
            "sum(subsidy_user) as subsidy_user,sum(subsidy_amount) as subsidy_amount, sum(profit_amount) as profit_amount".
            " FROM daily_staff WHERE daily BETWEEN '$first_day' AND '$last_day'".
            " GROUP BY major_id,major_name,minor_id,minor_name,agent_id,agent_name";
        $generator = $mysqlReport->query($sql);
        if (!empty($generator)) {
            $mysqlReport->weekly_staff->import($generator, [
                'weekly' => $weekly,
            ], 'replace');
        }

        $monthly = intval(date("Ym",$time));
        $first_day = date('Ym01', $time);
        $last_day = date('Ymd', strtotime(date('Y-m-01',$time) . ' +1 month -1 day'));
        $sql = "SELECT major_id,major_name,minor_id,minor_name,agent_id,agent_name,max(user_all) as user_all,".
            "sum(user_register) as user_register,sum(user_first_deposit) as user_first_deposit,".
            "sum(amount_first_deposit) as amount_first_deposit,sum(user_active) as user_active,".
            "sum(deposit_count) as deposit_count,sum(deposit_user) as deposit_user,sum(user_register) as user_register,".
            "sum(user_first_deposit) as user_first_deposit,sum(amount_first_deposit)as amount_first_deposit,".
            "sum(user_active) as user_active,sum(deposit_count) as deposit_count,sum(deposit_user) as deposit_user,".
            "sum(deposit_amount) as deposit_amount,sum(deposit_bank_count) as deposit_bank_count,".
            "sum(deposit_bank_user) as deposit_bank_user,sum(deposit_bank_amount) as deposit_bank_amount,".
            "sum(deposit_weixin_count) as deposit_weixin_count,sum(deposit_weixin_user) as deposit_weixin_user,".
            "sum(deposit_weixin_amount) as deposit_weixin_amount,sum(deposit_alipay_count) as deposit_alipay_count,".
            "sum(deposit_alipay_user) as deposit_alipay_user,sum(deposit_alipay_amount) as deposit_alipay_amount,".
            "sum(bank_deposit_count) as bank_deposit_count,sum(bank_deposit_user) as bank_deposit_user,".
            "sum(bank_deposit_amount) as bank_deposit_amount,sum(staff_deposit_count) as staff_deposit_count,".
            "sum(staff_deposit_user) as staff_deposit_user,sum(staff_deposit_amount) as staff_deposit_amount,".
            "sum(withdraw_count) as withdraw_count,sum(withdraw_user) as withdraw_user,sum(coupon_user) as coupon_user,".
            "sum(withdraw_amount) as withdraw_amount,sum(staff_withdraw_count) as staff_withdraw_count,".
            "sum(staff_withdraw_user) as staff_withdraw_user,sum(staff_withdraw_amount) as staff_withdraw_amount,".
            "sum(coupon_amount) as coupon_amount,sum(brokerage_user) as brokerage_user,sum(bet_count) as bet_count,sum(wager_count) as wager_count,".
            "sum(wager_amount) as wager_amount,sum(wager_user) as wager_user,sum(brokerage_amount) as brokerage_amount,sum(bet_user) as bet_user,sum(bet_amount) as bet_amount,".
            "sum(bonus_count) as bonus_count,sum(bonus_user) as bonus_user,sum(bonus_amount) as bonus_amount,".
            "sum(rebate_count) as rebate_count,sum(rebate_user) as rebate_user,sum(rebate_amount) as rebate_amount,".
            "sum(subsidy_user) as subsidy_user,sum(subsidy_amount) as subsidy_amount, sum(profit_amount) as profit_amount".
            " FROM daily_staff WHERE daily BETWEEN '$first_day' AND '$last_day'".
            " GROUP BY major_id,major_name,minor_id,minor_name,agent_id,agent_name";
        $generator = $mysqlReport->query($sql);
        if (!empty($generator)) {
            $mysqlReport->monthly_staff->import($generator, [
                'monthly' => $monthly,
            ], 'replace');
        }

        $adapter->plan('NotifyPlat', ['path' => 'Analysis/Site', 'data' => ["time"=>$time]]);

        if (time() > $time + 86400) {
            $adapter->plan('Report/Staff', ['time' => $time + 86400], time(), 9);
        }
        if (time() < $time + 86400 + 3600) {
            $adapter->plan('Report/Staff', ['time' => $time], time() + 600, 9);
        }
    }
}
