<?php
namespace Site\Websocket\Account\Staff;

use Lib\Websocket\Context;
use Lib\Config;
use Site\Websocket\CheckLogin;
/*
 * 负责人---leo
 * 负责开始时间--2019-04-08
 * */

/*
 * 员工添加
 * Account/Staff/StaffAddUpdate {"staff_key":"staff1","staff_name":"王六","password":"admin123","operate_list":["broker_layer","broker_report"],"notify_status":"1","deposit_limit":50000,"withdraw_limit":900000,"level_list":["1","2","11","12"]}
 * */

class StaffAddUpdate extends CheckLogin
{
    public function onReceiveLogined(Context $context, Config $config)
    {
        //验证是否有操作权限
        $auth = json_decode($context->getInfo('StaffAuth'));
        if(!in_array("slave_list_insert",$auth)){
            $context->reply(["status" => 202, "msg" => "你还没有操作权限"]);
            return;
        }
        $staffId = $context->getInfo('StaffId');
        $StaffGrade = $context->getInfo("StaffGrade");
        $MasterId = $context->getInfo("MasterId");
        $data = $context->getData();
        $name = isset($data["staff_name"]) ? $data["staff_name"] : '';
        $key = isset($data["staff_key"]) ? $data["staff_key"] : '';
        $password = isset($data["password"]) ? $data["password"] : '';
        $notify_status = isset($data["notify_status"]) ? $data["notify_status"] : '';
        $deposit_limit = isset($data["deposit_limit"]) ? $data["deposit_limit"] : '';
        $withdraw_limit = isset($data["withdraw_limit"]) ? $data["withdraw_limit"] : '';
        $operate_keys = isset($data["operate_list"]) ? $data["operate_list"] : '';
        $staff_level = isset($data["level_list"]) ? $data["level_list"] : '';
        if(empty($name)){
            $context->reply(["status" => 211, "msg" => "员工名不能为空"]);
            return;
        }
        if(empty($key)){
            $context->reply(["status" => 203, "msg" => "员工登录账号不能为空"]);
            return;
        }
        // 验证规则
        $preg = '/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/';
        if (!preg_match($preg, $key)) {
            $context->reply(['status' => 204, 'msg' => '登录账号需6-20位字符,可包含英文和数字']);
            return;
        }
        if(empty($password)){
            $context->reply(["status" => 205, "msg" => "登录密码不能为空"]) ;
            return;
        }
        $preg = '/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/';
        if (!preg_match($preg, $password)) {
            $context->reply(['status' => 206, 'msg' => '登录密码需6-20位字符,可包含英文和数字']);
            return;
        }

        if(!empty($deposit_limit)){
            if(!is_numeric($deposit_limit)){
                $context->reply(["status" => 208, "msg" => "入款金额不正确"]);
                return;
            }
        }
        if(!empty($withdraw_limit)){
            if(!is_numeric($withdraw_limit)){
                $context->reply(["status" => 209, "msg" => "出款金额不正确"]);
                return;
            }
        }
		if (empty($staff_level)) {
			$context->reply(["status" => 210, "msg" => "会员等级列表不能为空"]);
			return;
		}
		if (empty($operate_keys)) {
			$context->reply(["status" => 211, "msg" => "子账号操作权限不能为空"]);
			return;
		}
        if(!empty($operate_keys)){
            if(!is_array($operate_keys)){
                $context->reply(["status" => 210, "msg" => "操作权限不正确,请重新选择"]);
                return;
            }
        }

        if($notify_status == 1){
            $notify_status = 1;
        }else{
            $notify_status = 0;
        }
        //判断staff_key是否已经存在
        $sql = "SELECT staff_key FROM staff_auth WHERE staff_key = :staff_key";
        $param = [":staff_key" => $key];
        $mysql = $config->data_staff;
        try{
            foreach ($mysql->query($sql, $param) as $row){
                $info = $row;
            }
        }catch( \PDOException $e){
            $context->reply(["status" => 400, "msg" => "登录账号错误"]);
            throw new \PDOException($e);
        }
        if(!empty($info)){
            $context->reply(["status" => 207, "msg" => "该登录账号已被注册,请重新输入"]);
            return;
        }
		//判断人员名称是否存在  (新增修改 04-08)
		$sql = "SELECT staff_name FROM staff_info WHERE staff_name = :staff_name";
		$param = [":staff_name" => $name];
		$staff_name_info = '';
		foreach ($mysql->query($sql, $param) as $row) {
			$staff_name_info = $row['staff_name'];
		}
		if(!empty($staff_name_info)){
			$context->reply(["status" => 210, "msg" => "该员工名称已被注册,请重新输入"]);
			return;
		}
        //添加子账号的基本信息
        $sql = "INSERT INTO staff_info SET staff_name = :staff_name, staff_grade = :staff_grade, master_id = :master_id, leader_id = :leader_id, add_time = :add_time, add_ip = :add_ip";
        $params = [
            ":staff_name" => $name,
            ":staff_grade" => $StaffGrade,
            ":master_id" => $MasterId?:$staffId,
            ":leader_id" => $staffId,
            ":add_time" => time(),
            ":add_ip" => ip2long($context->getClientAddr()),
        ];
        try{
            $mysql->execute($sql, $params);
            $sql = 'SELECT last_insert_id() as staff_id';
            foreach ($mysql->query($sql) as $row)
                $staff_id = $row['staff_id'];
            //记录日志
            $sql = 'INSERT INTO operate_log SET staff_id=:staff_id, operate_key=:operate_key, detail=:detail,client_ip= :client_ip';
            $params = [
                ':staff_id' => $staffId,
                ':client_ip' => ip2long($context->getClientAddr()),
                ':operate_key' => 'slave_list_insert',
                ':detail' => '添加子账号编号为'.$staff_id.'基本信息',
            ];
            $mysql->execute($sql, $params);
        }catch (\PDOException $e){
            $context->reply(["status" => 401, "msg" => "添加失败"]);
            throw new \PDOException($e);
        }
        //添加子账号的登录信息
        $sql = "INSERT INTO staff_auth SET staff_id = :staff_id, staff_key = :staff_key, password_hash = :password_hash";
        $param = [
            ":staff_id" => $staff_id,
            ":staff_key" => $key,
            ":password_hash" => $password,
        ];
        try{
            $mysql->execute($sql,$param);
            //记录日志
            $sql = 'INSERT INTO operate_log SET staff_id=:staff_id, operate_key=:operate_key, detail=:detail,client_ip= :client_ip';
            $params = [
                ':staff_id' => $staffId,
                ':client_ip' => ip2long($context->getClientAddr()),
                ':operate_key' => 'slave_list_insert',
                ':detail' => '添加子账号编号为'.$staff_id.'登录信息',
            ];
            $mysql->execute($sql, $params);
        }catch(\PDOException $e){
            $context->reply(["status" => 402, "msg" => "添加失败"]);
            throw new \PDOException($e);
        }
        //添加员工授信额度
        $sqls = "UPDATE staff_credit SET deposit_limit=:deposit_limit, withdraw_limit=:withdraw_limit,notify_status=:notify_status WHERE staff_id=:staff_id";
        $params = [
            ":staff_id" => $staff_id,
            ":deposit_limit" => $deposit_limit,
            ":withdraw_limit" => $withdraw_limit ,
            ":notify_status" =>$notify_status
        ];
        //$limit_point  员工授信额度提示
        try{
            $mysql->execute($sqls, $params);
            //记录日志
            $sql = 'INSERT INTO operate_log SET staff_id=:staff_id, operate_key=:operate_key, detail=:detail,client_ip= :client_ip';
            $params = [
                ':staff_id' => $staffId,
                ':client_ip' => ip2long($context->getClientAddr()),
                ':operate_key' => 'slave_list_insert',
                ':detail' => '添加子账号编号为'.$staff_id."出款额度为".$withdraw_limit."入款额度为".$deposit_limit,
            ];
            $mysql->execute($sql, $params);
        }catch(\PDOException $e){
            $context->reply(["status" => 403, "msg" => "添加失败"]);
            throw new \PDOException($e);
        }
        //添加员工的操作授权信息
        foreach ($operate_keys as $item){
            $sql = "INSERT INTO staff_permit SET staff_id=:staff_id, operate_key=:operate_key";
            $param = [
                ":staff_id" => $staff_id,
                ":operate_key" => $item
            ];
            try{
                $mysql->execute($sql, $param);
            }catch (\PDOException $e){
                $context->reply(["status" => 404, "msg" => "添加失败"]);
                throw new \PDOException($e);
            }
        }
        //记录日志
        $sql = 'INSERT INTO operate_log SET staff_id=:staff_id, operate_key=:operate_key, detail=:detail,client_ip= :client_ip';
        $params = [
            ':staff_id' => $staffId,
            ':client_ip' => ip2long($context->getClientAddr()),
            ':operate_key' => 'slave_list_insert',
            ':detail' => '添加子账号编号为'.$staff_id.'操作授权信息',
        ];
        $mysql->execute($sql, $params);
       
        //添加会员层级信息
        if(!empty($staff_level)){
            foreach ($staff_level as $item){
                $sql = "INSERT INTO staff_layer SET staff_id=:staff_id,layer_id=:layer_id";
                $param = [
                    ":staff_id" => $staff_id,
                    ":layer_id" => $item
                ];
                try{
                    $mysql->execute($sql,$param);
                }catch (\PDOException $e){
                    $context->reply(["status" => 406, "msg" => "添加失败"]);
                    throw new \PDOException($e);
                }
            }
        }
        //记录日志
        $sql = 'INSERT INTO operate_log SET staff_id=:staff_id, operate_key=:operate_key, detail=:detail,client_ip= :client_ip';
        $params = [
            ':staff_id' => $staffId,
            ':client_ip' => ip2long($context->getClientAddr()),
            ':operate_key' => 'slave_list_insert',
            ':detail' => '添加子账号编号为'.$staff_id.'添加会员层级id为'.json_encode($staff_level),
        ];
        $mysql->execute($sql, $params);
        $context->reply([
            "status" => 200,
            "msg" => "添加成功",
        ]);

    }
}