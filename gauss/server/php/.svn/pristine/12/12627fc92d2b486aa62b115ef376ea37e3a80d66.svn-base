<?php

namespace Site\Task\Index;

use Lib\Config;
use Lib\Task\Context;
use Lib\Task\IHandler;

class Account implements IHandler {

    public function onTask(Context $context, Config $config) {
        ['staff_grade' => $StaffGrade, 'id' => $id, "master_id" => $master, "staff_id" => $staffId] = $context->getData();
        $websocketAdapter = new \Lib\Websocket\Adapter($config->cache_site);
        $mysqlReport = $config->data_report;
        $mysqlUser = $config->data_user;
        $mysqlStaff = $config->data_staff;

        $userWithdrawNum = 0;
        $allmoney = 0;
        $alipay = 0;
        $weixin = 0;
        $onlineBank = 0;
        $bank = 0;
        $manual = 0;
        $rechargeUserNum = 0;
        $rechargeNum = 0;
        $manualRechargeUserNum = 0;
        $manualRechargeNum = 0;
        $alipayUser = 0;
        $weixinUser = 0;
        $onlineBankUser = 0;
        $bankUser = 0;
        $manualUser = 0;
        $allWithdraw = 0;
        $userWithdraw = 0;
        $manualWithdraw = 0;
        $activityWithdraw = 0;
        $activityWithdrawNum = 0;
        $withdrawUserNumAll = 0;
        $rebate = 0;
        $rebateNum = 0;
        $rebatesub = 0;
        $register = 0;
        $rebatesubNum = 0;
        $broker = 0;
        $brokerNum = 0;
        $withdrawNum = 0;
        $withdrawUserNum = 0;
        $manualWithdrawUserNum = 0;
        $manualWithdrawNum = 0;
        $betBonus = 0;
        $betAmount = 0;
        $betNum = 0;
        $firstMoney = 0;
        $betCount = 0;
        $firstNum = 0;
        $depositLineBank = [];
        $depositWeixin = [];
        $depositAlipay = [];
        $depositBank = [];
        $convenientPaymentCount = 0; //便捷支付金额
        $convenientPaymentNum = 0; //便捷支付人数
        $bonusNum = 0;
        $bonusCount = 0;
        $bonusFrequency = 0;

        //外接口投注及派奖数据
        $video_ag_betcount = 0;
        $video_ag_betamount = 0;
        $video_ag_betnum = 0;
        $video_ag_bonuscount = 0;
        $video_ag_bonusamount = 0; //AG视讯
        $video_ag_bonusnum = 0; //TOTO 　暂未想好更优的办法来处理默认值

        $game_mg_betcount = 0;
        $game_mg_betamount = 0;
        $game_mg_betnum = 0;
        $game_mg_bonuscount = 0;
        $game_mg_bonusamount = 0;
        $game_mg_bonusnum = 0; //MG电子

        $game_fish_betcount = 0;
        $game_fish_betamount = 0;
        $game_fish_betnum = 0;
        $game_fish_bonuscount = 0;
        $game_fish_bonusamount = 0;
        $game_fish_bonusnum = 0; //捕鱼达人

        $sports_sb_betcount = 0;
        $sports_sb_betamount = 0;
        $sports_sb_betnum = 0;
        $sports_sb_bonuscount = 0;
        $sports_sb_bonusamount = 0;
        $sports_sb_bonusnum = 0; //沙巴体育

        $video_mo_betcount = 0;
        $video_mo_betamount = 0;
        $video_mo_betnum = 0;
        $video_mo_bonuscount = 0;
        $video_mo_bonusamount = 0;
        $video_mo_bonusnum = 0; //澳门视讯

        $lottery_game_betcount = 0;
        $lottery_game_betamount = 0;
        $lottery_game_betnum = 0;
        $lottery_game_bonuscount = 0;
        $lottery_game_bonusamount = 0;
        $lottery_game_bonusnum = 0; //彩票游戏（本地非外接口）

        $monthIncome = 0; //本月损益
        $monthrRate = 0; //本月毛率
        $lastMonthIncome = 0; //上月损益
        $lastMonthrRate = 0; //上月毛率

        $monthRevenue = 0; //本月盈利
        $monthRevenueRate = 0; //本月盈率
        $lastMonthRevenue = 0; //上月盈利
        $lastMonthRevenueRate = 0; //上月盈率      
        $onlineUsers = 0; //在线用户
        $distributedBrokerage = 0;
        $distributedBrokerageNum = 0;
        $waitBrokerageNum = 0;
        $waitBrokerage = 0;


        if ($master != 0) {
            $staffId = $master;
        }

        $agentMysql = $config->data_staff;
        $agent_id = [];
        switch ($StaffGrade) {
            case 0:
                $sql = "SELECT agent_id FROM staff_struct_agent ";
                $agent_id = iterator_to_array($agentMysql->query($sql));
                break;
            case 1:
                $sql = "SELECT agent_id FROM staff_struct_agent WHERE major_id='$staffId'";
                $agent_id = iterator_to_array($agentMysql->query($sql));
                break;
            case 2:
                $sql = "SELECT agent_id FROM staff_struct_agent WHERE minor_id='$staffId'";
                $agent_id = iterator_to_array($agentMysql->query($sql));
                break;

            case 3:
                $agent_id[] = ['agent_id' => $staffId];
                break;
        }

        $userMysql = $config->data_user;
        $user_id = '';
        if (!empty($agent_id)) {
            foreach ($agent_id as $row) {
                $get_agent = $row['agent_id'];
                $sql = "SELECT user_id,deal_key FROM user_info WHERE agent_id='$get_agent'";
                foreach ($userMysql->query($sql) as $item) {
                    $user_id .= $item['user_id'] . ',';
                }
            }
        }
        $user_list = rtrim($user_id, ',');
        if (empty($user_list)) {
            $user_list = 0;
        }
        $day_today = date("Y-m-d", time()); //今日日期
        $day_start = strtotime(date("Y-m-d", time()) . " 00:00:00"); //日起始时间
        $day_end = strtotime(date("Y-m-d", time()) . " 23:59:59"); //日结束时间

        if ($StaffGrade == 0) {
            $all_data_sql = "select  sum(bonus_count) as bonusFrequency , count(bonus_amount>0 or null) as bonusNum,sum(bonus_amount) as bonusCount , count(bank_deposit_count>0 or null) as bank_deposit_count, sum(bank_deposit_amount)as bank_deposit_amount,count(deposit_bank_count>0 or null ) as deposit_bank_count,sum(deposit_bank_amount) as deposit_bank_amount,count(deposit_weixin_count>0 or null) as deposit_weixin_count ,sum(deposit_weixin_amount)as deposit_weixin_amount,count(deposit_alipay_count>0 or null) as deposit_alipay_count,sum(deposit_alipay_amount) as deposit_alipay_amount,count(staff_deposit_count>0 or null )  as staff_deposit_count,sum(staff_deposit_amount)  as staff_deposit_amount, count(withdraw_count>0 or null) as  withdraw_count, sum(withdraw_amount)as withdraw_amount,count(coupon_amount>0 or null)as coupon_count, sum(coupon_amount)as coupon_amount,count(staff_withdraw_count) as staff_withdraw_count,sum(staff_withdraw_amount) as staff_withdraw_amount, count(rebate_amount>0 or null) as rebate_amountTime ,sum(rebate_amount)as rebate_amount, count(subsidy_amount>0 or null) as subsidy_count ,sum(subsidy_amount)  as subsidy_amount, sum(bet_count)as bet_count,count(staff_deposit_count>0 or null)as staff_deposit_countTime,sum(staff_deposit_count)  as staff_deposit_countSum, count(staff_withdraw_count>0 or null)as staff_withdraw_countTime,sum(staff_withdraw_count) as  staff_withdraw_countSum,  count(bet_count>0 or null) as bet_countTime,sum(bet_count)as bet_count,sum(bet_amount)as bet_amount, count(is_first_deposit>0 or null) as is_first_deposit from daily_user where  daily>='$day_today'";
            $register_data_sql = "SELECT count(user_id) as user_id FROM user_info_intact WHERE register_time >= '$day_start'";
            $brokerage_data_sql = "select sum(brokerage) as brokerage,count(user_id) as user_id FROM daily_user_brokerage where daily >='$day_today'";
            $first_rechage_sql = "SELECT group_concat(user_id)  FROM user_event WHERE  first_deposit_time >= '$day_start'";

            $deposit_linebank_detail = "SELECT way_name,gate_name, sum(finish_money) as money " .
                    "FROM deposit_gateway_intact WHERE  finish_time BETWEEN '$day_start' AND '$day_end'" .
                    " AND way_key='bank' group by gate_name,way_name ";
            $deposit_weixin_detail = "SELECT way_name,gate_name, sum(finish_money) as money " .
                    "FROM deposit_gateway_intact WHERE  finish_time  BETWEEN '$day_start' AND '$day_end'" .
                    " AND way_key='weixin' group by gate_name,way_name ";
            $deposit_alipay_detail = "SELECT way_name,gate_name, sum(finish_money) as money " .
                    "FROM deposit_gateway_intact WHERE  finish_time  BETWEEN '$day_start' AND '$day_end'" .
                    " AND way_key='alipay' group by gate_name,way_name ";

            $deposit_bank_detail = "SELECT passage_name,to_bank_name, to_account_number, sum(finish_money) as money" .
                    " FROM deposit_bank_intact WHERE finish_time   BETWEEN '$day_start' AND '$day_end'  group by passage_name,to_bank_name,to_account_number";
            $lottery_sql = "select sum(bet_count)as gameBetCount,count(bet_count>0 or null) as gameBetNum,sum(bet_amount)as game_BetAmount,sum(bonus_amount)as gameBonusAmount,sum(bonus_count) as gameBonusCount,count(bonus_count>0 or null)as gameBonusNum from daily_user_lottery where  daily>='$day_today'  ";
            $external_sql = "select game_key,sum(bet_count)as gameBetCount,count(bet_count>0 or null) as gameBetNum,sum(bet_amount)as game_BetAmount,sum(bonus_amount)as gameBonusAmount,sum(bonus_count) as gameBonusCount,count(bonus_count>0 or null)as gameBonusNum from daily_user_external where   daily>='$day_today' group by game_key ";
            $brokerage_sql = "select count(deliver_time=0 or null ) as waitBrokerageNum,count(deliver_time>0 or null ) as distributedBrokerageNum,sum(if(deliver_time>0,brokerage,0)) as distributedBrokerage,sum(if(deliver_time=0,brokerage,0)) as waitBrokerage from daily_user_brokerage WHERE    daily>='$day_today' ";
        } else {
            $all_data_sql = "select  sum(bonus_count) as bonusFrequency , count(bonus_amount>0 or null) as bonusNum,sum(bonus_amount) as bonusCount , count(bank_deposit_count>0 or null) as bank_deposit_count, sum(bank_deposit_amount)as bank_deposit_amount,count(deposit_bank_count>0 or null ) as deposit_bank_count,sum(deposit_bank_amount) as deposit_bank_amount,count(deposit_weixin_count>0 or null) as deposit_weixin_count ,sum(deposit_weixin_amount)as deposit_weixin_amount,count(deposit_alipay_count>0 or null) as deposit_alipay_count,sum(deposit_alipay_amount) as deposit_alipay_amount,count(staff_deposit_count>0 or null )  as staff_deposit_count,sum(staff_deposit_amount)  as staff_deposit_amount, count(withdraw_count>0 or null) as  withdraw_count, sum(withdraw_amount)as withdraw_amount,count(coupon_amount>0 or null)as coupon_count, sum(coupon_amount)as coupon_amount,count(staff_withdraw_count) as staff_withdraw_count,sum(staff_withdraw_amount) as staff_withdraw_amount, count(rebate_amount>0 or null) as rebate_amountTime ,sum(rebate_amount)as rebate_amount, count(subsidy_amount>0 or null) as subsidy_count ,sum(subsidy_amount)  as subsidy_amount, sum(bet_count)as bet_count,count(staff_deposit_count>0 or null)as staff_deposit_countTime,sum(staff_deposit_count)  as staff_deposit_countSum, count(staff_withdraw_count>0 or null)as staff_withdraw_countTime,sum(staff_withdraw_count) as  staff_withdraw_countSum,  count(bet_count>0 or null) as bet_countTime,sum(bet_count)as bet_count,sum(bet_amount)as bet_amount, count(is_first_deposit>0 or null) as is_first_deposit from daily_user where user_id in ($user_list) and  daily>='$day_today'";
            $register_data_sql = "SELECT count(user_id) as user_id FROM user_info_intact WHERE user_id in ($user_list) and  register_time >= '$day_start'";
            $brokerage_data_sql = "select sum(brokerage) as brokerage,count(user_id) as user_id FROM daily_user_brokerage where user_id in ($user_list) and  daily >='$day_today'";
            $first_rechage_sql = "SELECT group_concat(user_id)  FROM user_event WHERE user_id in ($user_list) and first_deposit_time >= '$day_start'";

            $deposit_linebank_detail = "SELECT way_name,gate_name, sum(finish_money) as money " .
                    "FROM deposit_gateway_intact WHERE user_id in ($user_list) AND finish_time BETWEEN '$day_start' AND '$day_end'" .
                    " AND way_key='bank' group by gate_name,way_name ";
            $deposit_weixin_detail = "SELECT way_name,gate_name, sum(finish_money) as money " .
                    "FROM deposit_gateway_intact WHERE user_id in ($user_list) AND finish_time BETWEEN '$day_start' AND '$day_end'" .
                    " AND way_key='weixin' group by gate_name,way_name ";
            $deposit_alipay_detail = "SELECT way_name,gate_name, sum(finish_money) as money " .
                    "FROM deposit_gateway_intact WHERE user_id in ($user_list) AND finish_time BETWEEN '$day_start' AND '$day_end'" .
                    " AND way_key='alipay' group by gate_name,way_name ";

            $deposit_bank_detail = "SELECT passage_name,to_bank_name, to_account_number, sum(finish_money) as money" .
                    " FROM deposit_bank_intact WHERE user_id in ($user_list) AND finish_time BETWEEN '$day_start' AND '$day_end' group by passage_name,to_bank_name,to_account_number";

            $lottery_sql = "select sum(bet_count)as gameBetCount,count(bet_count>0 or null) as gameBetNum,sum(bet_amount)as game_BetAmount,sum(bonus_amount)as gameBonusAmount,sum(bonus_count) as gameBonusCount,count(bonus_count>0 or null)as gameBonusNum from daily_user_lottery where user_id in ($user_list) and  daily>='$day_today' ";
            $external_sql = "select sum(bet_count)as gameBetCount,count(bet_count>0 or null) as gameBetNum,sum(bet_amount)as game_BetAmount,sum(bonus_amount)as gameBonusAmount,sum(bonus_count) as gameBonusCount,count(bonus_count>0 or null)as gameBonusNum from daily_user_external where user_id in ($user_list) and  daily>='$day_today' group by game_key ";

            $brokerage_sql = "select count(deliver_time=0 or null ) as waitBrokerageNum,count(deliver_time>0 or null ) as distributedBrokerageNum,sum(if(deliver_time>0,brokerage,0)) as distributedBrokerage,sum(if(deliver_time=0,brokerage,0)) as waitBrokerage from daily_user_brokerage WHERE   user_id in ($user_list) and   daily>='$day_today' ";
        }

        $brokerage_data_list = iterator_to_array($mysqlReport->query($brokerage_sql));
        $distributedBrokerage += $brokerage_data_list[0]['distributedBrokerage'];
        $distributedBrokerageNum += $brokerage_data_list[0]['distributedBrokerageNum'];
        $waitBrokerageNum += $brokerage_data_list[0]['waitBrokerageNum'];
        $waitBrokerage += $brokerage_data_list[0]['waitBrokerage'];

        $data_list = iterator_to_array($mysqlReport->query($all_data_sql));
        $rechargeUserNum += $data_list[0]['bank_deposit_count'] + $data_list[0]['deposit_bank_count'] + $data_list[0]['deposit_weixin_count'] + $data_list[0]['deposit_alipay_count'] + $data_list[0]['staff_deposit_count'];
        $allmoney += $data_list[0]['bank_deposit_amount'] + $data_list[0]['deposit_bank_amount'] + $data_list[0]['deposit_weixin_amount'] + $data_list[0]['deposit_alipay_amount'] + $data_list[0]['staff_deposit_amount'];
        //内外接口的投注及派奖数据 

        $data_lottery = iterator_to_array($mysqlReport->query($lottery_sql));
        $lottery_game_betcount += $data_lottery[0]['gameBetCount'];
        $lottery_game_betamount += $data_lottery[0]['game_BetAmount'];
        $lottery_game_betnum += $data_lottery[0]['gameBetNum'];
        $lottery_game_bonuscount += $data_lottery[0]['gameBonusCount'];
        $lottery_game_bonusamount += $data_lottery[0]['gameBonusAmount'];
        $lottery_game_bonusnum += $data_lottery[0]['gameBonusNum'];

        $data_external = iterator_to_array($mysqlReport->query($external_sql));

        if (!empty($data_external)) {
            foreach ($data_external as $value) {
                switch ($value['game_key']) {
                    case video_ag:
                        $video_ag_betcount += $value['gameBetCount'];
                        $video_ag_betamount += $value['game_BetAmount'];
                        $video_ag_betnum += $value['gameBetNum'];
                        $video_ag_bonuscount += $value['gameBonusCount'];
                        $video_ag_bonusnum += $value['gameBonusNum'];
                        $video_ag_bonusamount += $value['gameBonusAmount'];
                        break;
                    case game_mg:
                        $game_mg_betcount += $value['gameBetCount'];
                        $game_mg_betamount += $value['game_BetAmount'];
                        $game_mg_betnum += $value['gameBetNum'];
                        $game_mg_bonuscount += $value['gameBonusCount'];
                        $game_mg_bonusnum += $value['gameBonusNum'];
                        $game_mg_bonusamount += $value['gameBonusAmount'];
                        break;
                    case game_fish:
                        $game_fish_betcount += $value['gameBetCount'];
                        $game_fish_betamount += $value['game_BetAmount'];
                        $game_fish_betnum += $value['gameBetNum'];
                        $game_fish_bonuscount += $value['gameBonusCount'];
                        $game_fish_bonusnum += $value['gameBonusNum'];
                        $game_fish_bonusamount += $value['gameBonusAmount'];
                        break;
                    case sports_sb:
                        $sports_sb_betcount += $value['gameBetCount'];
                        $sports_sb_betamount += $value['game_BetAmount'];
                        $sports_sb_betnum += $value['gameBetNum'];
                        $sports_sb_bonuscount += $value['gameBonusCount'];
                        $sports_sb_bonusnum += $value['gameBonusNum'];
                        $sports_sb_bonusamount += $value['gameBonusAmount'];

                        break;
                    case video_mo:
                        $video_mo_betcount += $value['gameBetCount'];
                        $video_mo_betamount += $value['game_BetAmount'];
                        $video_mo_betnum += $value['gameBetNum'];
                        $video_mo_bonuscount += $value['gameBonusCount'];
                        $video_mo_bonusnum += $value['gameBonusNum'];
                        $video_mo_bonusamount += $value['gameBonusAmount'];
                        break;
                }
            }
        }


        //右侧收益数据固定栏
//        $month_income_sql = "select sum(bet_amount) as monthBetAmount,sum(bonus_amount) as monthBonusAmount,sum(rebate_amount)as monthRebateAmount,sum(subsidy_amount) as monthSubsidyAmount,sum(coupon_amount) as monthCouponAmount from daily_user where  daily >='$month_start_day'";
//        $month_brokerage_sql = "select sum(brokerage) as brokerage  FROM daily_user_brokerage where daily >='$month_start_day'";
//        $lastMonth_income_sql = "select sum(bet_amount) as monthBetAmount,sum(bonus_amount) as monthBonusAmount,sum(rebate_amount)as monthRebateAmount,sum(subsidy_amount) as monthSubsidyAmount  , sum(coupon_amount) as monthCouponAmount from daily_user   where  daily BETWEEN '$lastMonthFirstday' and '$lastMonthLastday'";
//        $lastMonth_brokerage_sql = "select sum(brokerage) as brokerage FROM daily_user_brokerage where daily  BETWEEN '$lastMonthFirstday' and '$lastMonthLastday'";
        //TODO 需求待确认暂不进行等级划分
//        $month_income = iterator_to_array($mysqlReport->query($month_income_sql));
//        $month_brokerage = iterator_to_array($mysqlReport->query($month_brokerage_sql));
//        $lastMonth_income = iterator_to_array($mysqlReport->query($lastMonth_income_sql));
//        $lastMonth_brokerage = iterator_to_array($mysqlReport->query($lastMonth_brokerage_sql));
        // $monthIncome+=$month_income[0]['$month_income']


        $bank += $data_list[0]['bank_deposit_amount'];
        $bankUser += $data_list[0]['bank_deposit_count']; //银行

        $onlineBank += $data_list[0]['deposit_bank_amount']; //网银
        $onlineBankUser += $data_list[0]['deposit_bank_count'];

        $weixin += $data_list[0]['deposit_weixin_amount']; //微信
        $weixinUser += $data_list[0]['deposit_weixin_count'];

        $alipay += $data_list[0]['deposit_alipay_amount']; //支付宝
        $alipayUser += $data_list[0]['deposit_alipay_count'];

        $manual += $data_list[0]['staff_deposit_amount']; //人工存入
        $manualUser += $data_list[0]['staff_deposit_count'];

        $withdrawUserNumAll += $data_list[0]['withdraw_count'] + $data_list[0]['staff_withdraw_count']; //总出款人数　
        $allWithdraw += $data_list[0]['withdraw_amount'] + $data_list[0]['staff_withdraw_amount']; //总出款

        $userWithdraw += $data_list[0]['withdraw_amount']; //用户总出款

        $activityWithdraw += $data_list[0]['coupon_amount']; //活动礼金金额
        $activityWithdrawNum += $data_list[0]['coupon_count']; //活动礼金的人数

        $manualWithdraw += $data_list[0]['staff_withdraw_amount']; //人工提款金额
        $withdrawUserNum += $data_list[0]['staff_withdraw_count']; //人工提款人数
        $rebate += $data_list[0]['rebate_amount'];
        $rebateNum += $data_list[0]['rebate_amountTime']; //返点
        $rebatesub += $data_list[0]['subsidy_amount'];
        $rebatesubNum += $data_list[0]['subsidy_count']; //反水
        $bonusNum += $data_list[0]['bonusNum']; //派奖人数
        $bonusCount += $data_list[0]['bonusCount']; //派奖金额
        $bonusFrequency += $data_list[0]['bonusFrequency']; //派奖注数
        $register += iterator_to_array($mysqlUser->query($register_data_sql))[0]['user_id']; //注册人数
        $brokerageData = iterator_to_array($mysqlReport->query($brokerage_data_sql)); //返佣金额
        $broker += intval($brokerageData[0]['brokerage']);
        $brokerNum += intval($brokerageData[0]['user_id']); //返佣人数

        $withdrawNum += $userWithdrawNum + $activityWithdrawNum;
        $manualRechargeNum += $data_list[0]['staff_deposit_countSum']; //笔数
        $manualRechargeUserNum += $data_list[0]['staff_deposit_countTime']; //人数

        $manualWithdrawNum += $data_list[0]['staff_withdraw_count'];
        $manualWithdrawUserNum += $data_list[0]['staff_withdraw_countTime'];

        $betCount += $data_list[0]['bet_count']; //单数
        $betAmount += $data_list[0]['bet_amount']; //金额
        $betNum += $data_list[0]['bet_countTime']; //交易人数

        $first_list = iterator_to_array($mysqlReport->query($first_rechage_sql));
        $firstNum = $first_list[0]['group_concat(user_id)'] ? count(explode(',', $first_list[0]['group_concat(user_id)'])) : 0;
        foreach ($config->deal_list as $deal) {
            $mysqlDeal = $config->__get("data_" . $deal);
            if (!empty($first_list[0]['group_concat(user_id)'])) {
                $bankSql = "SELECT sum(finish_money) as finish_money FROM deposit_bank_intact WHERE user_id in (:user_list)";
                $gateSql = "SELECT sum(finish_money) as finish_money FROM deposit_gateway_intact WHERE user_id in (:user_list)";
                $staffSql = "SELECT sum(money) as money FROM staff_deposit_intact WHERE user_id in (:user_list)";
                $param = [":user_list" => $first_list[0]['group_concat(user_id)']];
                $bank_list = iterator_to_array($mysqlDeal->query($bankSql, $param));
                $gate_list = iterator_to_array($mysqlDeal->query($gateSql, $param));
                $staff_list = iterator_to_array($mysqlDeal->query($staffSql, $param));
                $firstMoney += $bank_list[0]['finish_money'] + $gate_list[0]['finish_money'] + $staff_list[0]['money'];

                foreach ($mysqlDeal->query($deposit_linebank_detail) as $deposit_linebank) {
                    $depositLineBank[] = $deposit_linebank; //网银入款详情
                };
                foreach ($mysqlDeal->query($deposit_weixin_detail) as $deposit_weixin) {
                    $depositWeixin[] = $deposit_weixin; //微信入款详情
                };
                foreach ($mysqlDeal->query($deposit_alipay_detail) as $deposit_alipay) {
                    $depositAlipay[] = $deposit_alipay; //支付宝入款详情
                };
                foreach ($mysqlDeal->query($deposit_bank_detail) as $deposit_bank) {
                    $depositBank[] = $deposit_bank; //银行入款详情
                };
            }
        }


        $deposit = [
            "recharge_amount" => $allmoney, //总充值金额
            "rechargeUserNum" => $rechargeUserNum, //充值总人数
            "online_bank" => $onlineBank, //网银转账金额
            "onlineBankUser" => $onlineBankUser, //网银转账人数
            "bank" => $bank, //银行转账金额
            "bankUser" => $bankUser, //银行转账人数
            "weixin" => $weixin, //微信转账金额
            "weixinUser" => $weixinUser, //微信转账人数
            'alipay' => $alipay, //支付宝金额
            "alipayUser" => $alipayUser, //支付宝人数
            "manual" => $manual, //人工存入金额
            "manualUser" => $manualUser, //人工存入人数
            "convenientPaymentCount" => $convenientPaymentCount, //便捷支付总金额
            "convenientPaymentNum" => $convenientPaymentNum, //便捷支付总人数　　TODO:数据库暂无字段先写死
        ];
        $withdraw = [
            "withdraw_amount" => $allWithdraw, //总支出
            "withdrawUserNumAll" => $withdrawUserNumAll,
            "active" => $activityWithdraw, //活动礼金
            "activityWithdrawNum" => $activityWithdrawNum, //活动礼金人数
            "rechargeGiftCount" => 0, //充值送的彩金金额　TODO 数据库暂无字段
            "rechargeGiftNum" => 0, //充值送的彩金人数
            "rechargeOfferCount" => 0, //入款优惠金额
            "rechargeOfferNum" => 0, //入款优惠笔数
            "rebatesub" => $rebatesub, //反水金额
            "rebatesubNum" => $rebatesubNum, //反水人数
            "broker" => $broker, //返佣金额
            "brokerNum" => $brokerNum, //返佣人数
            "distributedBrokerage" => $distributedBrokerage, //已派发佣金
            "distributedBrokerageNum" => $distributedBrokerageNum, //已派发佣金人数
            "waitBrokerageNum" => $waitBrokerageNum, //未派发佣金人数
            "waitBrokerage" => $waitBrokerage //未派发佣金
        ];
        $count = [
            "recharge_count" => $rechargeNum, //充值笔数
            "rechargeUserAll" => $rechargeUserNum, //充值人数
            "withdraw_count" => $withdrawNum, //体现笔数
            "WithdrawNum" => $withdrawUserNum + $userWithdrawNum,
            "first_recharge_count" => $firstNum, //首充人数
            "firstMoney" => $firstMoney  //首充金额
        ];
        //中上
        $bet = [
            "betCount" => $betCount, //投注总单数
            "betAmount" => $betAmount, //投注总金额
            "betNum" => $betNum, //　投注总人数
            "lottery_game_betcount" => $lottery_game_betcount, //彩票游戏投注注数
            "lottery_game_betamount" => $lottery_game_betamount, //彩票游戏投注金额
            "lottery_game_betnum" => $lottery_game_betnum, //彩票游戏投注人数
            "video_ag_betcount" => $video_ag_betcount, //AG视讯投注注数
            "video_ag_betamount" => $video_ag_betamount, //AG视讯投注金额
            "video_ag_betnum" => $video_ag_betnum, //AG视讯投注人数
            "game_mg_betcount" => $game_mg_betcount, //MG电子投注注数
            "game_mg_betamount" => $game_mg_betamount, //MG电子投注金额
            "game_mg_betnum" => $game_mg_betnum, //MG电子投注人数
            "game_fish_betcount" => $game_fish_betcount, //捕鱼达人投注注数
            "game_fish_betamount" => $game_fish_betamount, //捕鱼达人投注金额
            "game_fish_betnum" => $game_fish_betnum, //捕鱼达人投注人数
            "sports_sb_betcount" => $sports_sb_betcount, //沙巴体育投注注数
            "sports_sb_betamount" => $sports_sb_betamount, //沙巴体育投注金额
            "sports_sb_betnum" => $sports_sb_betnum, //沙巴体育投注人数
            "video_mo_betcount" => $video_mo_betcount, //澳门视讯投注注数
            "video_mo_betamount" => $video_mo_betamount, //澳门视讯投注金额
            "video_mo_betnum" => $video_mo_betnum, //澳门视讯投注人数
        ];

        //中下
        $bonus = [
            "bonusNum" => $bonusNum,
            "bonusCount" => $bonusCount,
            "bonusFrequency" => $bonusFrequency,
            //细分
            "lottery_game_bonuscount" => $lottery_game_bonuscount, //彩票游戏派奖注数
            "lottery_game_bonusamount" => $lottery_game_bonusamount, //彩票游戏派奖金额
            "lottery_game_bonusnum" => $lottery_game_bonusnum, //彩票游戏派奖人数
            "video_ag_bonuscount" => $video_ag_bonuscount, //AG视讯派奖注数
            "video_ag_bonusamount" => $video_ag_bonusamount, //AG视讯派奖金额
            "video_ag_bonusnum" => $video_ag_bonusnum, //AG视讯派奖人数
            "game_mg_bonuscount" => $game_mg_bonuscount, //MG电子派奖注数
            "game_mg_bonusamount" => $game_mg_bonusamount, //MG电子派奖金额
            "game_mg_bonusnum" => $game_mg_bonusnum, //MG电子派奖人数
            "game_fish_bonuscount" => $game_fish_bonuscount, //捕鱼达人派奖注数
            "game_fish_bonusamount" => $game_fish_bonusamount, //捕鱼达人派奖金额
            "game_fish_bonusnum" => $game_fish_bonusnum, //捕鱼达人派奖人数
            "sports_sb_bonuscount" => $sports_sb_bonuscount, //沙巴体育派奖注数
            "sports_sb_bonusamount" => $sports_sb_bonusamount, //沙巴体育派奖金额
            "sports_sb_bonusnum" => $sports_sb_bonusnum, //沙巴体育派奖人数
            "video_mo_bonuscount" => $video_mo_bonuscount, //澳门视讯派奖注数
            "video_mo_bonusamount" => $video_mo_bonusamount, //澳门视讯派奖金额
            "video_mo_bonusnum" => $video_mo_bonusnum, //澳门视讯派奖人数
        ];

        //顶部
        $list = [
            //$bonusNum += $data_list[0]['bonusNum']; //派奖人数
            //$bonusCount += $data_list[0]['bonusCount']; //派奖金额
            "new_register" => $register, //今日注册人数
            "bonus_num" => $bonusNum, //派奖人数
            "bonus_count" => $bonusCount, //派奖金额
            //TODO 今日派彩
            //"account_money" => $accountMoney, //今日余额
            "first_recharge_num" => $firstNum, //首充人数
            "first_money" => $firstMoney, //首充金额
            "bet_money" => $betAmount, //投注金额
            "bet_user_number" => $betNum, //投注人数
            "bonus" => $betAmount - $rebate - $bonusCount - $broker - $rebatesub - $activityWithdraw, //盈利
        ];
        $convenientRecharge = []; //TODO 便捷支付暂无数据库字段
        $rechargeDetail = [
            "lineBankRecharge" => $depositLineBank,
            "weixinRecharge" => $depositWeixin,
            "alipayRecharge" => $depositAlipay,
            "bankRecharge" => $depositBank,
            "convenientRecharge" => $convenientRecharge//便捷支付支付详情
        ];
        $right = [
            "monthIncome" => $monthIncome, //本月损益
            "monthrRate" => $monthrRate, //本月毛率
            "lastMonthIncome" => $lastMonthIncome, //上月损益
            "lastMonthrRate" => $lastMonthrRate, //上月毛率
            "monthRevenue" => $monthRevenue, //本月盈利
            "monthRevenueRate" => $monthRevenueRate, //本月盈率
            "lastMonthRevenue" => $lastMonthRevenue, //上月盈利
            "lastMonthRevenueRate" => $lastMonthRevenueRate, //上月盈率
            "onlineUsers" => $onlineUsers//在线用户
        ];
        $finaleResult = array_merge($list, $deposit, $withdraw, $bet, $bonus, $count, $rechargeDetail, $right);
        $websocketAdapter->send($id, "Index/Account", $finaleResult);
        $sql = "SELECT client_id FROM staff_session WHERE client_id=:client_id AND staff_id=:staff_id";
        foreach ($mysqlStaff->query($sql, [":client_id" => $id, ":staff_id" => $staffId]) as $client) {
            $id = $client["client_id"];
            $taskAdapter = new \Lib\Task\Adapter($config->cache_daemon);
            $taskAdapter->plan('Index/Account', ['staff_grade' => $StaffGrade, 'id' => $id, "master_id" => $master, "staff_id" => $staffId], time() + 600, 9);
        }
    }

}
