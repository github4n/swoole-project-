<?php

/**
 * UserSubsidy.php.
 *
 * @description   用户返水日报插入数据任务
 * @Author  nathan
 * @date  2019-04-07
 * @links  Initialize.php
 * @modifyAuthor   Luis
 * @modifyTime  2019-04-23
 */

namespace Site\Task\Report;

use Lib\Config;
use Lib\Task\Context;
use Lib\Task\IHandler;

class UserSubsidy implements IHandler
{
    public function onTask(Context $context, Config $config)
    {
        ['time' => $time] = $context->getData();
        $daily = intval(date('Ymd', $time));
        $mysqlReport = $config->data_report;
        $mysqlUser = $config->data_user;
        $adapter = $context->getAdapter();

        //检测数据是否锁定
        $dailyInfo = [];
        $sql = 'select daily from daily_status where daily=:daily and frozen=1';
        foreach ($mysqlReport->query($sql, [':daily' => $daily]) as $row) {
            $dailyInfo = $row;
        }
        if (!empty($dailyInfo)) {
            $adapter->plan('Report/UserSubsidy', ['time' => $time + 86400], time(), 9);

            return;
        }

        $sql = 'select user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,sum(subsidy) as subsidy from daily_user_game_subsidy where daily = :daily group by user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name';
        $data = array();

        foreach ($mysqlReport->query($sql, [':daily' => $daily]) as $row) {
            $user_id = $row['user_id'];
            //累计返水
            $start_time = strtotime($daily.' 23:59:59');
            $count_sql = 'select sum(subsidy) as cumulate_subsidy from daily_user_subsidy where user_id= :user_id and daily <= :daily and (deliver_time <= :start_time and deliver_time>0)';
            $countSubsidy = 0;

            foreach ($mysqlReport->query($count_sql, [':user_id' => $row['user_id'], ':daily' => $daily, ':start_time' => $start_time]) as $tag) {
                $countSubsidy = !empty($tag['cumulate_subsidy']) ? $tag['cumulate_subsidy'] : 0;
            }

            $param = [
                'daily' => $daily,
                'user_id' => $user_id,
                'user_key' => $row['user_key'],
                'user_name' => $row['user_name'],
                'layer_id' => $row['layer_id'],
                'layer_name' => $row['layer_name'],
                'major_id' => $row['major_id'],
                'major_name' => $row['major_name'],
                'minor_id' => $row['minor_id'],
                'minor_name' => $row['minor_name'],
                'agent_id' => $row['agent_id'],
                'agent_name' => $row['agent_name'],
                'subsidy' => $row['subsidy'],
                'cumulate_subsidy' => $countSubsidy,
                'deliver_time' => 0,
            ];
            $data[] = $param;
        }
        $mysqlReport->daily_user_subsidy->load($data, [], 'replace');

        //周报
        $user_data = [];
        $user_sql = 'select user_id,account_name as user_name,layer_id,layer_name from user_info_intact ';
        foreach ($mysqlUser->query($user_sql) as $user_detail) {
            $user_data += [$user_detail['user_id'] => [
                    'user_name' => $user_detail['user_name'],
                    'layer_id' => $user_detail['layer_id'],
                    'layer_name' => $user_detail['layer_name'],
            ]];
        }
        $weekly = intval(date('oW', $time));
        $weekData = [];
        $first_day = intval(date('Ymd', strtotime('+0 week Monday', $time)));
        $last_day = intval(date('Ymd', strtotime('+0 week Sunday', $time)));
        $weekly_sql = 'select user_id,user_key,0 as user_name,0 as layer_id,0 as layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,sum(subsidy) as subsidy from daily_user_subsidy where daily between :first_day and :last_day group by user_id,user_key,major_id,major_name,minor_id,minor_name,agent_id,agent_name';
        $user_list_weekly = iterator_to_array($mysqlReport->query($weekly_sql, [':first_day' => $first_day, ':last_day' => $last_day]));
        if (!empty($user_list_weekly[0]['user_id'])) {
            foreach ($user_list_weekly as $val) {
                //累计返水
                $start_time = strtotime($first_day.' 00:00:00');
                $end_time = strtotime($last_day.' 23:59:59');
                $count_sql = 'select sum(subsidy) as cumulate_subsidy from daily_user_subsidy where user_id= :user_id and daily <= :daily and (deliver_time between  :start_time and :end_time)';
                $countSubsidy = 0;

                foreach ($mysqlReport->query($count_sql, [':user_id' => $val['user_id'], ':daily' => $daily, ':start_time' => $start_time, ':end_time' => $end_time]) as $tag) {
                    $countSubsidy = !empty($tag['cumulate_subsidy']) ? $tag['cumulate_subsidy'] : 0;
                }
                $weekData[] = [
                    'user_id' => $val['user_id'],
                    'user_key' => $val['user_key'],
                    'user_name' => !empty($user_data[$val['user_id']]['user_name']) ? $user_data[$val['user_id']]['user_name'] : 0,
                    'layer_id' => $user_data[$val['user_id']]['layer_id'],
                    'layer_name' => $user_data[$val['user_id']]['layer_name'],
                     'major_id' => $val['major_id'],
                    'major_name' => $val['major_name'],
                    'minor_id' => $val['minor_id'],
                    'minor_name' => $val['minor_name'],
                    'agent_id' => $val['agent_id'],
                    'agent_name' => $val['agent_name'],
                    'subsidy' => $val['subsidy'],
                    'cumulate_subsidy' => $countSubsidy,
                ];
            }
        }
        if (!empty($weekData)) {
            $mysqlReport->weekly_user_subsidy->load($weekData, [
                'weekly' => $weekly,
                    ], 'replace');
        }

        //月报
        $monthData = [];
        $monthly = intval(date('Ym', $time));
        $first_day = date('Ym01', $time);
        $last_day = date('Ymd', strtotime(date('Y-m-01', $time).' +1 month -1 day'));
        $monthly_sql = 'select user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name,sum(subsidy) as subsidy,max(cumulate_subsidy) as cumulate_subsidy from daily_user_subsidy where daily between :first_day and :last_day group by user_id,user_key,user_name,layer_id,layer_name,major_id,major_name,minor_id,minor_name,agent_id,agent_name';
        $user_list_monthly = iterator_to_array($mysqlReport->query($monthly_sql, [':first_day' => $first_day, ':last_day' => $last_day]));
        if (!empty($user_list_monthly[0]['user_id'])) {
            foreach ($user_list_monthly as $val) {
                //累计返水
                $start_time = strtotime($first_day.' 00:00:00');
                $end_time = strtotime($last_day.' 23:59:59');
                $count_sql = 'select sum(subsidy) as cumulate_subsidy from daily_user_subsidy where user_id= :user_id and daily <= :daily and (deliver_time between  :start_time and :end_time)';
                $countSubsidy = 0;

                foreach ($mysqlReport->query($count_sql, [':user_id' => $val['user_id'], ':daily' => $daily, ':start_time' => $start_time, ':end_time' => $end_time]) as $tag) {
                    $countSubsidy = !empty($tag['cumulate_subsidy']) ? $tag['cumulate_subsidy'] : 0;
                }
                $monthData[] = [
                    'user_id' => $val['user_id'],
                    'user_key' => $val['user_key'],
                    'user_name' => !empty($user_data[$val['user_id']]['user_name']) ? $user_data[$val['user_id']]['user_name'] : 0,
                    'layer_id' => $user_data[$val['user_id']]['layer_id'],
                    'layer_name' => $user_data[$val['user_id']]['layer_name'],
                     'major_id' => $val['major_id'],
                    'major_name' => $val['major_name'],
                    'minor_id' => $val['minor_id'],
                    'minor_name' => $val['minor_name'],
                    'agent_id' => $val['agent_id'],
                    'agent_name' => $val['agent_name'],
                    'subsidy' => $val['subsidy'],
                    'cumulate_subsidy' => $countSubsidy,
                ];
            }
        }
        if (!empty($monthData)) {
            $mysqlReport->monthly_user_subsidy->load($monthData, [
                'monthly' => $monthly,
                    ], 'replace');
        }

        if (time() > $time + 86400) {
            $adapter->plan('Report/UserSubsidy', ['time' => $time + 86400], time(), 9);
        }
        if (time() < $time + 86400 + 3600) {
            $adapter->plan('Report/UserSubsidy', ['time' => $time], time() + 600, 9);
        }
    }
}
