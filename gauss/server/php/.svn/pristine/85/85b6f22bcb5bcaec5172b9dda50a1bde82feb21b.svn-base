<?php
namespace Plat\Websocket\Logs;

use Plat\Websocket\CheckLogin;
use Lib\Websocket\Context;
use Lib\Config;
/*
 * 参数：page:页数，数默认为1 num:条数，默认为10   admin_name:员工名,start_time:开始时间,end_time:结束时间, operate_name:操作类型 gonum:跳转的页数
 * 状态码：
 * 200：获取成功
 * 202：页数不能为空
 * 203：每页显示的条数不能为空
 * 206 :页数类型不正确
 * 207 :条数类型不正确
 * 400：获取失败
 *
 * */

class LogsList extends CheckLogin {
    function onReceiveLogined(Context $context,Config $config)
    {
        //验证是否有操作权限
        $auth = json_decode($context->getInfo('adminAuth'));
        if(!in_array("account_operate_select",$auth)){
            $context->reply(["status"=>201,"msg"=>"你还没有操作权限"]);
            return;
        }
        $data = $context->getData();
        $page = trim($data['page']) ?: 1;
        $num = trim($data['num']) ?: 10;
        $admin_name = '';
        $operate_name = '';
        $time = '';
        if(empty($page)){
            $context->reply(['status'=>202,'msg'=>'页数不能为空']);
            return;
        }
        if(empty($num)){
            $context->reply(['status'=>203,'msg'=>'每页显示的条数不能为空']);
            return;
        }
        if(!is_numeric($page)){
            $context->reply(['status'=>206,'msg'=>'页数类型不正确']);
            return;
        }
        if(!is_numeric($num)){
            $context->reply(['status'=>207,'msg'=>'条数类型不正确']);
            return;
        }

        $limit = ' LIMIT '.($page-1)*$num.','.$num;
        //跳转的页数
        if(!empty($data['gonum']) && is_numeric($data['gonum'])){
            $limit =  ' LIMIT '.($data['gonum']-1)*$num.','.$num;
        }
        //用户名模糊查询
        if(!empty(trim($data['admin_name']))){
            $admin_name = " AND admin_name = '".trim($data['admin_name'])."'";
        }
        //操作类型
        if(!empty(trim($data['operate_name']))){
            $operate_name = " AND operate_name LIKE '%".trim($data['operate_name'])."%'";
        }
        //只有开始时间的话那就查询那目前时间的数据，如果只有结束时间的话就只查询在从这个时间之前的数据，两个参数都有的话就查询之间的数据
        if(!empty(trim($data['start_time']))){
            $start = strtotime(trim($data['start_time'])." 00:00:00");
            if(!empty(trim($data['end_time']))){
                $end = strtotime(trim($data['end_time'])."23:59:59");
                $time = " AND log_time  BETWEEN ".$start." AND ".$end;
            }else{
                $time = " AND log_time BETWEEN ".$start." AND ".time();
            }
        }

        if(!empty(trim($data['end_time'])) && empty(trim($data['start_time'])))
            $time = " AND log_time <= ".strtotime(trim($data['end_time'])."23:59:59");
        $mysql = $config->data_admin;
        $list=array();
        $sql = "SELECT log_id,admin_name,operate_name,detail,log_time FROM operate_log_intact WHERE 1=1 ".$admin_name.$time.$operate_name.$limit;
        $context->reply($sql) ;
        $totalmysql = "select log_id from operate_log_intact WHERE 1=1 ".$admin_name.$time.$operate_name;
        try{
            foreach($mysql->query($sql) as $row){
                $list[] = $row;
            }
            $total = $mysql->execute($totalmysql);
        } catch(\PDOException $e){
            $context->reply(['status'=>400,'msg'=>'获取失败']);
            throw new \PDOException($e);
        }
        if(!empty($list)){
            foreach ($list as $key=>$val){
                $list[$key]['time']=date("Y-m-d H:i:s",$val['log_time']);
            }
        }
        $context->reply(['status'=>200,'msg'=>'获取成功','total'=>$total,'totalpage'=>ceil($total/$num),'loglist'=>$list]);
    }
}