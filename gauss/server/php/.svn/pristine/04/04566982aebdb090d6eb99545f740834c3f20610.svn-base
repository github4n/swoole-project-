<?php
/**
 * Created by PhpStorm.
 * User: nathan
 * Date: 19-3-11
 * Time: 下午12:19
 */

namespace App\Websocket\ExternalGame;
use Lib\Config;
use Lib\Websocket\Context;
use App\Websocket\CheckLogin;

/*
 * ExternalGame/GameStart  {"interface_key":"fg","game_code":"dfdc","game_type":"h5","language":"zh-cn","return_url":"http://www.baidu.com"}
 */
class GameStart extends CheckLogin
{
    public function onReceiveLogined(Context $context, Config $config)
    {
        $param = $context->getData();
        $interface_key = isset($param['interface_key']) ? $param['interface_key'] : '';
        if (empty($interface_key)) {
            $context->reply(['status' => 400,'msg' => '三方平台Key不能为空']);
            return;
        }
        $user_id = $context->getInfo('UserId');
        $user_key = $context->getInfo('UserKey');
        $adapter = new \Lib\Task\Adapter($config->cache_daemon);
        switch ($interface_key) {
            case 'fg':
                $game_key = isset($param['game_key']) ? $param['game_key'] : '';
                $game_type = isset($param['game_type']) ? $param['game_type'] : '';
                $language = isset($param['language']) ? $param['language'] : 'zh-cn';
//                $ip = $context->getClientAddr();
                $ip = isset($param['ip']) ? $param['ip'] : '';
                $return_url = isset($param['return_url']) ? $param['return_url'] : '';
                //切割server_id
                $server_id =  substr($game_key,3);
                //读取游戏列表json文件
                $file_data = file_get_contents($interface_key .'_game.json',__FILE__);
                $data = json_decode($file_data);
                $game_code = '';
                foreach ($data->data as $game) {
                    //匹配数据
                    if ($server_id == $game->service_id) {
                        $game_code = $game->gamecode;
                    }
                }
                if (empty($game_key) || empty($game_code)) {
                    $context->reply(['status' => 401,'msg' => '游戏参数错误']);
                    return;
                }
                if (empty($game_type) || empty($language) || empty($return_url) || empty($ip)) {
                    $context->reply(['status' => 402,'msg' => '启动游戏相关参数错误']);
                    return;
                }
                $params = [
                    'user_id' => $user_id,
                    'user_key' => $user_key,
                    'game_code' => $game_code,
                    'game_type' => $game_type,
                    'language' => $language,
                    'ip' => $ip,
                    'return_url' => $return_url,
                    'action' => 'launch_game',
                    'client_id' => $context->clientId(),
                    'interface_key' => $interface_key,
                    'method' => 'GameStart'
                ];

                $adapter->plan('ExternalGame/GameStart',['data' => $params],time(),1);
                break;
            case 'ag':


                break;
            case 'ky':


                break;
            case 'lb':


                break;
            default:
                $context->reply(['status'=>404,'msg'=>'非法参数']);
                return;
                break;
        }
    }
}