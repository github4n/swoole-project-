<?php

namespace Site\Websocket\Member\MemberList;

use Lib\Websocket\Context;
use Lib\Config;
use Site\Websocket\CheckLogin;

/*
 * 会员管理-会员列表-代理线
 * Member/MemberList/AgentDetail {"user_id":"2","type":1}
 * 参数：user_id:体系线的id  type 1 为一级 2为2级 3为3级
 */

class AgentDetail extends CheckLogin {

    public function onReceiveLogined(Context $context, Config $config) {
        $auth = json_decode($context->getInfo('StaffAuth'));
        if (!in_array("user_list_select", $auth)) {
            $context->reply(["status" => 202, "msg" => "你还没有操作权限"]);
            return;
        }
        $data = $context->getData();
        $staffId = $context->getInfo('StaffId');
        $mysql = $config->data_report;
        $staff_mysql = $config->data_staff;
        $user_mysql = $config->data_user;
        $cache = $config->cache_site;
        $user_id = isset($data["user_id"]) ? $data["user_id"] : '';
        $MasterId = $context->getInfo('MasterId');
        if (empty($user_id)) {
            $context->reply(["status" => 204, "msg" => "代理参数不能为空"]);
            return;
        }
        if (!is_numeric($user_id)) {
            $context->reply(["status" => 205, "msg" => "代理参数类型错误"]);
            return;
        }
        $type = isset($data["type"]) ? $data["type"] : "";
        if (empty($type)) {
            $context->reply(["status" => 206, "msg" => "类型参数错误"]);
            return;
        }
        if (!is_numeric($type)) {
            $context->reply(["status" => 207, "msg" => "type值类型错误"]);
            return;
        }
        //搜索条件
        $user_key = isset($data["user_key"]) ? $data["user_key"] : '';
        $user_name = isset($data["user_name"]) ? $data["user_name"] : '';
        $layer_id = isset($data["layer_id"]) ? $data["layer_id"] : '';
        $start_time = isset($data["start_time"]) ? $data["start_time"] : '';
        $end_time = isset($data["end_time"]) ? $data["end_time"] : '';
        $major_name = isset($data["major_name"]) ? $data["major_name"] : '';
        $minor_name = isset($data["minor_name"]) ? $data["minor_name"] : '';
        $agent_name = isset($data["agent_name"]) ? $data["agent_name"] : '';
        $ip = isset($data["ip"]) ? $data["ip"] : '';
        $tel = isset($data["tel"]) ? $data["tel"] : '';
        $agent_one = isset($data["agent_one"]) ? $data["agent_one"] : "";
        $agent_two = isset($data["agent_two"]) ? $data["agent_two"] : "";
        $agent_three = isset($data["agent_three"]) ? $data["agent_three"] : "";
        $time = '';
        if (!empty($user_key)) {
            $user_key = " AND user_key = '" . $user_key . "'";
        }
        if (!empty($user_name)) {
            $user_name = " AND user_name = '" . $user_name . "'";
        }
        if (!empty($layer_id)) {
            $layer_id = " AND layer_id = " . $layer_id;
        }
        if (!empty($start_time) && !empty($end_time)) {
            $start = strtotime($start_time);
            $end = strtotime($end_time);
            $time = " AND register_time BETWEEN $start AND $end";
        }
        if (!empty($major_name)) {
            $major_name = " AND major_name = '" . $major_name . "'";
        }
        if (!empty($minor_name)) {
            $minor_name = " AND minor_name = '" . $minor_name . "'";
        }
        if (!empty($agent_name)) {
            $agent_name = " AND agent_name = '" . $agent_name . "'";
        }
        if (!empty($ip)) {
            $ip = " AND (register_ip = " . ip2long($ip) . " OR login_ip = " . ip2long($ip) . ')';
        }
        if (!empty($tel)) {
            $tel = " AND phone_number = " . $tel;
        }
        if (!empty($agent_one)) {
            $agent_one = " AND broker_1_key = '" . $agent_one . "'";
        }
        if (!empty($agent_two)) {
            $agent_two = "  AND broker_2_key = '" . $agent_two . "'";
        }
        if (!empty($agent_three)) {
            $agent_three = "  AND broker_3_key = '" . $agent_three . "'";
        }
        $user_layer = array();
        $layers = '';
        //子账号的权限信息  //会员层级列表
        if (!empty($MasterId)) {
            $sql = "SELECT layer_id FROM staff_layer WHERE staff_id=:staff_id";
            $param = [":staff_id" => $staffId];
            foreach ($staff_mysql->query($sql, $param) as $rows) {
                $user_layer[] .= $rows["layer_id"];
            }
            $layers = implode(",", $user_layer);
            $layer_list = array();
            if (!empty($user_layer)) {

                foreach ($user_layer as $item) {
                    $layers_list = array();
                    $sql = "SELECT layer_id,layer_name FROM layer_info WHERE layer_id=:layer_id";
                    $param = [":layer_id" => $item];
                    $users = [];
                    foreach ($user_mysql->query($sql, $param) as $row) {
                        $users = $row;
                    }
                    $layers_list["layer_name"] = $users["layer_name"];
                    $layers_list["layer_id"] = $users["layer_id"];
                    $layer_list[] = $layers_list;
                }
            }
        } else {
            $layer_list = json_decode($cache->hget("LayerList", "allLayer"));
        }
        $limit = " LIMIT 0,200";
        $order = " ORDER BY user_id desc";
        if ($type == 1) {
            $sql = "SELECT * FROM user_cumulate WHERE broker_1_id=:user_id " . $user_key . $user_name . $layer_id . $time . $major_name . $minor_name . $agent_name . $ip . $tel . $agent_one . $agent_two . $agent_three . $order . $limit;
            $total_sql = "SELECT user_id FROM user_cumulate WHERE broker_1_id=:user_id " . $user_key . $user_name . $layer_id . $time . $major_name . $minor_name . $agent_name . $ip . $tel . $agent_one . $agent_two . $agent_three . $limit;
            $list = iterator_to_array($mysql->query($sql, [":user_id" => $user_id]));
            $total = $mysql->execute($total_sql, [":user_id" => $user_id]);
        } elseif ($type == 2) {
            $sql = "SELECT * FROM user_cumulate WHERE broker_2_id=:user_id " . $user_key . $user_name . $layer_id . $time . $major_name . $minor_name . $agent_name . $ip . $tel . $agent_one . $agent_two . $agent_three . $order . $limit;
            $total_sql = "SELECT user_id FROM user_cumulate WHERE broker_2_id=:user_id " . $user_key . $user_name . $layer_id . $time . $major_name . $minor_name . $agent_name . $ip . $tel . $agent_one . $agent_two . $agent_three . $limit;
            $list = iterator_to_array($mysql->query($sql, [":user_id" => $user_id]));
            $total = $mysql->execute($total_sql, [":user_id" => $user_id]);
        } elseif ($type == 3) {
            $sql = "SELECT * FROM user_cumulate WHERE broker_3_id=:user_id " . $user_key . $user_name . $layer_id . $time . $major_name . $minor_name . $agent_name . $ip . $tel . $agent_one . $agent_two . $agent_three . $order . $limit;
            $total_sql = "SELECT user_id FROM user_cumulate WHERE broker_3_id=:user_id " . $user_key . $user_name . $layer_id . $time . $major_name . $minor_name . $agent_name . $ip . $tel . $agent_one . $agent_two . $agent_three . $limit;
            $list = iterator_to_array($mysql->query($sql, [":user_id" => $user_id]));
            $total = $mysql->execute($total_sql, [":user_id" => $user_id]);
        } else {
            $context->reply(["status" => 208, "msg" => "参数类型错误"]);
            return;
        }
        $user_list = [];
        if (!empty($list)) {
            foreach ($list as $key => $val) {
                $user_list[$key]["user_id"] = $val["user_id"];
                $user_list[$key]["user_key"] = $val["user_key"];
                $user_list[$key]["user_name"] = $val["user_name"];
                $user_list[$key]["layer_id"] = $val["layer_id"];
                $user_list[$key]["layer_name"] = $val["layer_name"];
                $user_list[$key]["major_name"] = $val["major_name"];
                $user_list[$key]["minor_name"] = $val["minor_name"];
                $user_list[$key]["agent_name"] = $val["agent_name"];
                $user_list[$key]["money"] = $val["money"];
                $user_list[$key]["broker_1_key"] = $val["broker_1_key"];
                $user_list[$key]["broker_1_id"] = $val["broker_1_id"];
                $user_list[$key]["broker_2_key"] = $val["broker_2_key"];
                $user_list[$key]["broker_2_id"] = $val["broker_2_id"];
                $user_list[$key]["broker_3_key"] = $val["broker_3_key"];
                $user_list[$key]["broker_3_id"] = $val["broker_3_id"];
                $user_list[$key]["brokerage"] = $val["brokerage"];
                $user_list[$key]["register_ip_time"] = empty($val["register_time"]) ? "" : date("Y-m-d H:i:s", $val["register_time"]) . "/";
                $user_list[$key]["register_ip_time"] .= empty($val["register_ip"]) ? "" : long2ip($val["register_ip"]);

                $address = '';
                $ip = !empty($val["register_ip"]) ? $val["register_ip"] : '';
                if ($ip != '') {
                    $ipTranslation = substr($ip, 0, 8);
                    $ipSaved = json_decode($cache->hget("ipList", $ipTranslation));
                    if (!empty($ipSaved)) {
                        $address = " " . "(" . $ipSaved[0]->region . " " . $ipSaved[0]->city . ")";
                    } else {
                        $ip_sql = "select * from ip_address where ip_net='$ipTranslation' ";
                        $ip_result = iterator_to_array($mysqlPublic->query($ip_sql));
                        if (!empty($ip_result)) {
                            $address = " " . "(" . $ip_result[0]['region'] . " " . $ip_result[0]['city'] . ")";
                            $cache->hset("ipList", $ipTranslation, json_encode($ip_result));
                        }
                    }
                }
                $user_list[$key]["register_ip_time"] .= $address;
                $user_list[$key]["login_ip_time"] = empty($val["login_time"]) ? "" : date("Y-m-d H:i:s", $val["login_time"]) . "/";
                $user_list[$key]["login_ip_time"] .= empty($val["login_ip"]) ? "" : long2ip($val["login_ip"]);
                $address = '';
                $ip = !empty($val["login_ip"]) ? $val["login_ip"] : '';
                if ($ip != '') {
                    $ipTranslation = substr($ip, 0, 8);
                    $ipSaved = json_decode($cache->hget("ipList", $ipTranslation));
                    if (!empty($ipSaved)) {
                        $address = " " . "(" . $ipSaved[0]->region . " " . $ipSaved[0]->city . ")";
                    } else {
                        $ip_sql = "select * from ip_address where ip_net='$ipTranslation' ";
                        $ip_result = iterator_to_array($mysqlPublic->query($ip_sql));
                        if (!empty($ip_result)) {
                            $address = " " . "(" . $ip_result[0]['region'] . " " . $ip_result[0]['city'] . ")";
                            $cache->hset("ipList", $ipTranslation, json_encode($ip_result));
                        }
                    }
                }
                $user_list[$key]["login_ip_time"] .= $address;

                $user_list[$key]["invite_code"] = $val["invite_code"];
                $user_list[$key]["profit_all"] = $val["profit_all"];
                if ($val["register_device"] == 0) {
                    $user_list[$key]["register_device"] = "PC";
                } elseif ($val["register_device"] == 1) {
                    $user_list[$key]["register_device"] = "手机浏览器";
                } elseif ($val["register_device"] == 2) {
                    $user_list[$key]["register_device"] = "iPhone APP";
                } elseif ($val["register_device"] == 3) {
                    $user_list[$key]["register_device"] = "安卓 APP";
                }
            }
        }
        $context->reply(['status' => 200, 'msg' => '获取成功', 'total' => $total, "level_list" => $layer_list, 'data' => $user_list]);
    }

}
