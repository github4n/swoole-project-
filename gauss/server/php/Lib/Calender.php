<?php
namespace Lib;

class Calender
{
    //各个年份的春节日期
    private static $spring = [
        2000 => '02-05', 2019 => '02-05', 2038 => '02-04', 2057 => '02-04', 2076 => '02-05', 2095 => '02-05',
        2001 => '01-24', 2020 => '01-25', 2039 => '01-24', 2058 => '01-24', 2077 => '01-24', 2096 => '01-25',
        2002 => '02-12', 2021 => '02-12', 2040 => '02-12', 2059 => '02-12', 2078 => '02-12', 2097 => '02-12',
        2003 => '02-01', 2022 => '02-01', 2041 => '02-01', 2060 => '02-02', 2079 => '02-02', 2098 => '02-01',
        2004 => '01-22', 2023 => '01-22', 2042 => '01-22', 2061 => '01-21', 2080 => '01-22', 2099 => '01-21',
        2005 => '02-09', 2024 => '02-10', 2043 => '02-10', 2062 => '02-09', 2081 => '02-09', 2100 => '02-09',
        2006 => '01-29', 2025 => '01-29', 2044 => '01-30', 2063 => '01-29', 2082 => '01-29',
        2007 => '02-18', 2026 => '02-17', 2045 => '02-17', 2064 => '02-17', 2083 => '02-17',
        2008 => '02-07', 2027 => '02-06', 2046 => '02-06', 2065 => '02-05', 2084 => '02-06',
        2009 => '01-26', 2028 => '01-26', 2047 => '01-26', 2066 => '01-26', 2085 => '01-26',
        2010 => '02-14', 2029 => '02-13', 2048 => '02-14', 2067 => '02-14', 2086 => '02-14',
        2011 => '02-03', 2030 => '02-03', 2049 => '02-02', 2068 => '02-03', 2087 => '02-03',
        2012 => '01-23', 2031 => '01-23', 2050 => '01-23', 2069 => '01-23', 2088 => '01-24',
        2013 => '02-10', 2032 => '02-11', 2051 => '02-11', 2070 => '02-11', 2089 => '02-10',
        2014 => '01-31', 2033 => '01-31', 2052 => '02-01', 2071 => '01-31', 2090 => '01-30',
        2015 => '02-19', 2034 => '02-19', 2053 => '02-19', 2072 => '02-19', 2091 => '02-18',
        2016 => '02-08', 2035 => '02-08', 2054 => '02-08', 2073 => '02-07', 2092 => '02-07',
        2017 => '01-28', 2036 => '01-28', 2055 => '01-28', 2074 => '01-27', 2093 => '01-27',
        2018 => '02-16', 2037 => '02-15', 2056 => '02-15', 2075 => '02-15', 2094 => '02-15',
    ];
    private static $zodiac = [
        'rat', 'ox', 'tiger', 'rabbit', 'dragon', 'snake', 'horse', 'sheep', 'monkey', 'chicken', 'dog', 'pig',
    ];
    public static function isSpringHoliday(int $time): bool
    {
        $y = intval(date('Y', $time));
        assert("isset(self::\$spring['{$y}'])", 'date out of range');
        $s = strtotime($y . '-' . self::$spring[$y]);
        return ($time >= $s - 86400 && $time < $s + 86400 * 6);
    }
    public static function getZodiacList(int $time): array
    {
        $y = intval(date('Y', $time));
        assert("isset(self::\$spring['{$y}'])", 'date out of range');
        $s = strtotime($y . '-' . self::$spring[$y]);
        if ($time < $s) {
            $y--;
        }
        $result = [];
        for ($n = 1; $n <= 49; $n++) {
            $i = $y - $n - 1899;
            $result[$n] = self::$zodiac[$i % 12];
        }
        return $result;
    }
}
